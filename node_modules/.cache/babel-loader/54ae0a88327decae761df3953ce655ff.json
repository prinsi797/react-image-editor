{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DD = void 0;\n\nconst Global_1 = require(\"./Global\");\n\nconst Util_1 = require(\"./Util\");\n\nexports.DD = {\n  get isDragging() {\n    var flag = false;\n\n    exports.DD._dragElements.forEach(elem => {\n      if (elem.dragStatus === 'dragging') {\n        flag = true;\n      }\n    });\n\n    return flag;\n  },\n\n  justDragged: false,\n\n  get node() {\n    var node;\n\n    exports.DD._dragElements.forEach(elem => {\n      node = elem.node;\n    });\n\n    return node;\n  },\n\n  _dragElements: new Map(),\n\n  _drag(evt) {\n    const nodesToFireEvents = [];\n\n    exports.DD._dragElements.forEach((elem, key) => {\n      const {\n        node\n      } = elem;\n      const stage = node.getStage();\n      stage.setPointersPositions(evt);\n\n      if (elem.pointerId === undefined) {\n        elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n      }\n\n      const pos = stage._changedPointerPositions.find(pos => pos.id === elem.pointerId);\n\n      if (!pos) {\n        return;\n      }\n\n      if (elem.dragStatus !== 'dragging') {\n        var dragDistance = node.dragDistance();\n        var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n\n        if (distance < dragDistance) {\n          return;\n        }\n\n        node.startDrag({\n          evt\n        });\n\n        if (!node.isDragging()) {\n          return;\n        }\n      }\n\n      node._setDragPosition(evt, elem);\n\n      nodesToFireEvents.push(node);\n    });\n\n    nodesToFireEvents.forEach(node => {\n      node.fire('dragmove', {\n        type: 'dragmove',\n        target: node,\n        evt: evt\n      }, true);\n    });\n  },\n\n  _endDragBefore(evt) {\n    const drawNodes = [];\n\n    exports.DD._dragElements.forEach(elem => {\n      const {\n        node\n      } = elem;\n      const stage = node.getStage();\n\n      if (evt) {\n        stage.setPointersPositions(evt);\n      }\n\n      const pos = stage._changedPointerPositions.find(pos => pos.id === elem.pointerId);\n\n      if (!pos) {\n        return;\n      }\n\n      if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n        exports.DD.justDragged = true;\n        Global_1.Konva._mouseListenClick = false;\n        Global_1.Konva._touchListenClick = false;\n        Global_1.Konva._pointerListenClick = false;\n        elem.dragStatus = 'stopped';\n      }\n\n      const drawNode = elem.node.getLayer() || elem.node instanceof Global_1.Konva['Stage'] && elem.node;\n\n      if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n        drawNodes.push(drawNode);\n      }\n    });\n\n    drawNodes.forEach(drawNode => {\n      drawNode.draw();\n    });\n  },\n\n  _endDragAfter(evt) {\n    exports.DD._dragElements.forEach((elem, key) => {\n      if (elem.dragStatus === 'stopped') {\n        elem.node.fire('dragend', {\n          type: 'dragend',\n          target: elem.node,\n          evt: evt\n        }, true);\n      }\n\n      if (elem.dragStatus !== 'dragging') {\n        exports.DD._dragElements.delete(key);\n      }\n    });\n  }\n\n};\n\nif (Global_1.Konva.isBrowser) {\n  window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n  window.addEventListener('touchend', exports.DD._endDragBefore, true);\n  window.addEventListener('mousemove', exports.DD._drag);\n  window.addEventListener('touchmove', exports.DD._drag);\n  window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n  window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","DD","Global_1","require","Util_1","isDragging","flag","_dragElements","forEach","elem","dragStatus","justDragged","node","Map","_drag","evt","nodesToFireEvents","key","stage","getStage","setPointersPositions","pointerId","undefined","Util","_getFirstPointerId","pos","_changedPointerPositions","find","id","dragDistance","distance","Math","max","abs","x","startPointerPos","y","startDrag","_setDragPosition","push","fire","type","target","_endDragBefore","drawNodes","Konva","_mouseListenClick","_touchListenClick","_pointerListenClick","drawNode","getLayer","indexOf","draw","_endDragAfter","delete","isBrowser","window","addEventListener"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/DragAndDrop.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DD = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nexports.DD = {\n    get isDragging() {\n        var flag = false;\n        exports.DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        exports.DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        exports.DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        const drawNodes = [];\n        exports.DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                exports.DD.justDragged = true;\n                Global_1.Konva._mouseListenClick = false;\n                Global_1.Konva._touchListenClick = false;\n                Global_1.Konva._pointerListenClick = false;\n                elem.dragStatus = 'stopped';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n                drawNodes.push(drawNode);\n            }\n        });\n        drawNodes.forEach((drawNode) => {\n            drawNode.draw();\n        });\n    },\n    _endDragAfter(evt) {\n        exports.DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,EAAR,GAAa,KAAK,CAAlB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACAJ,OAAO,CAACE,EAAR,GAAa;EACT,IAAII,UAAJ,GAAiB;IACb,IAAIC,IAAI,GAAG,KAAX;;IACAP,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyBC,OAAzB,CAAkCC,IAAD,IAAU;MACvC,IAAIA,IAAI,CAACC,UAAL,KAAoB,UAAxB,EAAoC;QAChCJ,IAAI,GAAG,IAAP;MACH;IACJ,CAJD;;IAKA,OAAOA,IAAP;EACH,CATQ;;EAUTK,WAAW,EAAE,KAVJ;;EAWT,IAAIC,IAAJ,GAAW;IACP,IAAIA,IAAJ;;IACAb,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyBC,OAAzB,CAAkCC,IAAD,IAAU;MACvCG,IAAI,GAAGH,IAAI,CAACG,IAAZ;IACH,CAFD;;IAGA,OAAOA,IAAP;EACH,CAjBQ;;EAkBTL,aAAa,EAAE,IAAIM,GAAJ,EAlBN;;EAmBTC,KAAK,CAACC,GAAD,EAAM;IACP,MAAMC,iBAAiB,GAAG,EAA1B;;IACAjB,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyBC,OAAzB,CAAiC,CAACC,IAAD,EAAOQ,GAAP,KAAe;MAC5C,MAAM;QAAEL;MAAF,IAAWH,IAAjB;MACA,MAAMS,KAAK,GAAGN,IAAI,CAACO,QAAL,EAAd;MACAD,KAAK,CAACE,oBAAN,CAA2BL,GAA3B;;MACA,IAAIN,IAAI,CAACY,SAAL,KAAmBC,SAAvB,EAAkC;QAC9Bb,IAAI,CAACY,SAAL,GAAiBjB,MAAM,CAACmB,IAAP,CAAYC,kBAAZ,CAA+BT,GAA/B,CAAjB;MACH;;MACD,MAAMU,GAAG,GAAGP,KAAK,CAACQ,wBAAN,CAA+BC,IAA/B,CAAqCF,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWnB,IAAI,CAACY,SAA7D,CAAZ;;MACA,IAAI,CAACI,GAAL,EAAU;QACN;MACH;;MACD,IAAIhB,IAAI,CAACC,UAAL,KAAoB,UAAxB,EAAoC;QAChC,IAAImB,YAAY,GAAGjB,IAAI,CAACiB,YAAL,EAAnB;QACA,IAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASR,GAAG,CAACS,CAAJ,GAAQzB,IAAI,CAAC0B,eAAL,CAAqBD,CAAtC,CAAT,EAAmDH,IAAI,CAACE,GAAL,CAASR,GAAG,CAACW,CAAJ,GAAQ3B,IAAI,CAAC0B,eAAL,CAAqBC,CAAtC,CAAnD,CAAf;;QACA,IAAIN,QAAQ,GAAGD,YAAf,EAA6B;UACzB;QACH;;QACDjB,IAAI,CAACyB,SAAL,CAAe;UAAEtB;QAAF,CAAf;;QACA,IAAI,CAACH,IAAI,CAACP,UAAL,EAAL,EAAwB;UACpB;QACH;MACJ;;MACDO,IAAI,CAAC0B,gBAAL,CAAsBvB,GAAtB,EAA2BN,IAA3B;;MACAO,iBAAiB,CAACuB,IAAlB,CAAuB3B,IAAvB;IACH,CAxBD;;IAyBAI,iBAAiB,CAACR,OAAlB,CAA2BI,IAAD,IAAU;MAChCA,IAAI,CAAC4B,IAAL,CAAU,UAAV,EAAsB;QAClBC,IAAI,EAAE,UADY;QAElBC,MAAM,EAAE9B,IAFU;QAGlBG,GAAG,EAAEA;MAHa,CAAtB,EAIG,IAJH;IAKH,CAND;EAOH,CArDQ;;EAsDT4B,cAAc,CAAC5B,GAAD,EAAM;IAChB,MAAM6B,SAAS,GAAG,EAAlB;;IACA7C,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyBC,OAAzB,CAAkCC,IAAD,IAAU;MACvC,MAAM;QAAEG;MAAF,IAAWH,IAAjB;MACA,MAAMS,KAAK,GAAGN,IAAI,CAACO,QAAL,EAAd;;MACA,IAAIJ,GAAJ,EAAS;QACLG,KAAK,CAACE,oBAAN,CAA2BL,GAA3B;MACH;;MACD,MAAMU,GAAG,GAAGP,KAAK,CAACQ,wBAAN,CAA+BC,IAA/B,CAAqCF,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWnB,IAAI,CAACY,SAA7D,CAAZ;;MACA,IAAI,CAACI,GAAL,EAAU;QACN;MACH;;MACD,IAAIhB,IAAI,CAACC,UAAL,KAAoB,UAApB,IAAkCD,IAAI,CAACC,UAAL,KAAoB,SAA1D,EAAqE;QACjEX,OAAO,CAACE,EAAR,CAAWU,WAAX,GAAyB,IAAzB;QACAT,QAAQ,CAAC2C,KAAT,CAAeC,iBAAf,GAAmC,KAAnC;QACA5C,QAAQ,CAAC2C,KAAT,CAAeE,iBAAf,GAAmC,KAAnC;QACA7C,QAAQ,CAAC2C,KAAT,CAAeG,mBAAf,GAAqC,KAArC;QACAvC,IAAI,CAACC,UAAL,GAAkB,SAAlB;MACH;;MACD,MAAMuC,QAAQ,GAAGxC,IAAI,CAACG,IAAL,CAAUsC,QAAV,MACZzC,IAAI,CAACG,IAAL,YAAqBV,QAAQ,CAAC2C,KAAT,CAAe,OAAf,CAArB,IAAgDpC,IAAI,CAACG,IAD1D;;MAEA,IAAIqC,QAAQ,IAAIL,SAAS,CAACO,OAAV,CAAkBF,QAAlB,MAAgC,CAAC,CAAjD,EAAoD;QAChDL,SAAS,CAACL,IAAV,CAAeU,QAAf;MACH;IACJ,CAtBD;;IAuBAL,SAAS,CAACpC,OAAV,CAAmByC,QAAD,IAAc;MAC5BA,QAAQ,CAACG,IAAT;IACH,CAFD;EAGH,CAlFQ;;EAmFTC,aAAa,CAACtC,GAAD,EAAM;IACfhB,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyBC,OAAzB,CAAiC,CAACC,IAAD,EAAOQ,GAAP,KAAe;MAC5C,IAAIR,IAAI,CAACC,UAAL,KAAoB,SAAxB,EAAmC;QAC/BD,IAAI,CAACG,IAAL,CAAU4B,IAAV,CAAe,SAAf,EAA0B;UACtBC,IAAI,EAAE,SADgB;UAEtBC,MAAM,EAAEjC,IAAI,CAACG,IAFS;UAGtBG,GAAG,EAAEA;QAHiB,CAA1B,EAIG,IAJH;MAKH;;MACD,IAAIN,IAAI,CAACC,UAAL,KAAoB,UAAxB,EAAoC;QAChCX,OAAO,CAACE,EAAR,CAAWM,aAAX,CAAyB+C,MAAzB,CAAgCrC,GAAhC;MACH;IACJ,CAXD;EAYH;;AAhGQ,CAAb;;AAkGA,IAAIf,QAAQ,CAAC2C,KAAT,CAAeU,SAAnB,EAA8B;EAC1BC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC1D,OAAO,CAACE,EAAR,CAAW0C,cAA9C,EAA8D,IAA9D;EACAa,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC1D,OAAO,CAACE,EAAR,CAAW0C,cAA/C,EAA+D,IAA/D;EACAa,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC1D,OAAO,CAACE,EAAR,CAAWa,KAAhD;EACA0C,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC1D,OAAO,CAACE,EAAR,CAAWa,KAAhD;EACA0C,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC1D,OAAO,CAACE,EAAR,CAAWoD,aAA9C,EAA6D,KAA7D;EACAG,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC1D,OAAO,CAACE,EAAR,CAAWoD,aAA/C,EAA8D,KAA9D;AACH"},"metadata":{},"sourceType":"script"}