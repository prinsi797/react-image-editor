{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emboss = void 0;\n\nconst Factory_1 = require(\"../Factory\");\n\nconst Node_1 = require(\"../Node\");\n\nconst Util_1 = require(\"../Util\");\n\nconst Validators_1 = require(\"../Validators\");\n\nconst Emboss = function (imageData) {\n  var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n  switch (direction) {\n    case 'top-left':\n      dirY = -1;\n      dirX = -1;\n      break;\n\n    case 'top':\n      dirY = -1;\n      dirX = 0;\n      break;\n\n    case 'top-right':\n      dirY = -1;\n      dirX = 1;\n      break;\n\n    case 'right':\n      dirY = 0;\n      dirX = 1;\n      break;\n\n    case 'bottom-right':\n      dirY = 1;\n      dirX = 1;\n      break;\n\n    case 'bottom':\n      dirY = 1;\n      dirX = 0;\n      break;\n\n    case 'bottom-left':\n      dirY = 1;\n      dirX = -1;\n      break;\n\n    case 'left':\n      dirY = 0;\n      dirX = -1;\n      break;\n\n    default:\n      Util_1.Util.error('Unknown emboss direction: ' + direction);\n  }\n\n  do {\n    var offsetY = (y - 1) * w4;\n    var otherY = dirY;\n\n    if (y + otherY < 1) {\n      otherY = 0;\n    }\n\n    if (y + otherY > h) {\n      otherY = 0;\n    }\n\n    var offsetYOther = (y - 1 + otherY) * w * 4;\n    var x = w;\n\n    do {\n      var offset = offsetY + (x - 1) * 4;\n      var otherX = dirX;\n\n      if (x + otherX < 1) {\n        otherX = 0;\n      }\n\n      if (x + otherX > w) {\n        otherX = 0;\n      }\n\n      var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n      var dR = data[offset] - data[offsetOther];\n      var dG = data[offset + 1] - data[offsetOther + 1];\n      var dB = data[offset + 2] - data[offsetOther + 2];\n      var dif = dR;\n      var absDif = dif > 0 ? dif : -dif;\n      var absG = dG > 0 ? dG : -dG;\n      var absB = dB > 0 ? dB : -dB;\n\n      if (absG > absDif) {\n        dif = dG;\n      }\n\n      if (absB > absDif) {\n        dif = dB;\n      }\n\n      dif *= strength;\n\n      if (blend) {\n        var r = data[offset] + dif;\n        var g = data[offset + 1] + dif;\n        var b = data[offset + 2] + dif;\n        data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n        data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n        data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n      } else {\n        var grey = greyLevel - dif;\n\n        if (grey < 0) {\n          grey = 0;\n        } else if (grey > 255) {\n          grey = 255;\n        }\n\n        data[offset] = data[offset + 1] = data[offset + 2] = grey;\n      }\n    } while (--x);\n  } while (--y);\n};\n\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);","map":{"version":3,"names":["Object","defineProperty","exports","value","Emboss","Factory_1","require","Node_1","Util_1","Validators_1","imageData","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","dirY","dirX","data","w","width","h","height","w4","y","Util","error","offsetY","otherY","offsetYOther","x","offset","otherX","offsetOther","dR","dG","dB","dif","absDif","absG","absB","r","g","b","grey","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/filters/Emboss.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emboss = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}