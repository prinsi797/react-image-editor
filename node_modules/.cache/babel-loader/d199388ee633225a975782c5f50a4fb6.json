{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transformer = void 0;\n\nconst Util_1 = require(\"../Util\");\n\nconst Factory_1 = require(\"../Factory\");\n\nconst Node_1 = require(\"../Node\");\n\nconst Shape_1 = require(\"../Shape\");\n\nconst Rect_1 = require(\"./Rect\");\n\nconst Group_1 = require(\"../Group\");\n\nconst Global_1 = require(\"../Global\");\n\nconst Validators_1 = require(\"../Validators\");\n\nconst Global_2 = require(\"../Global\");\n\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange', 'anchorStyleFuncChange'].map(e => e + `.${EVENTS_NAME}`).join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'];\nvar ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nconst TOUCH_DEVICE = ('ontouchstart' in Global_1.Konva._global);\n\nfunction getCursor(anchorName, rad, rotateCursor) {\n  if (anchorName === 'rotater') {\n    return rotateCursor;\n  }\n\n  rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n  var angle = (Util_1.Util.radToDeg(rad) % 360 + 360) % 360;\n\n  if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\n\nvar ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nvar MAX_SAFE_INTEGER = 100000000;\n\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\n\nfunction rotateAroundPoint(shape, angleRad, point) {\n  const x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  const y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return { ...shape,\n    rotation: shape.rotation + angleRad,\n    x,\n    y\n  };\n}\n\nfunction rotateAroundCenter(shape, deltaRad) {\n  const center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\n\nfunction getSnap(snaps, newRotationRad, tol) {\n  let snapped = newRotationRad;\n\n  for (let i = 0; i < snaps.length; i++) {\n    const angle = Global_1.Konva.getAngle(snaps[i]);\n    const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n\n  return snapped;\n}\n\nlet activeTransformersCount = 0;\n\nclass Transformer extends Group_1.Group {\n  constructor(config) {\n    super(config);\n    this._movingAnchorName = null;\n    this._transforming = false;\n\n    this._createElements();\n\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this.update = this.update.bind(this);\n    this.on(ATTR_CHANGE_LIST, this.update);\n\n    if (this.getNode()) {\n      this.update();\n    }\n  }\n\n  attachTo(node) {\n    this.setNode(node);\n    return this;\n  }\n\n  setNode(node) {\n    Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n    return this.setNodes([node]);\n  }\n\n  getNode() {\n    return this._nodes && this._nodes[0];\n  }\n\n  _getEventNamespace() {\n    return EVENTS_NAME + this._id;\n  }\n\n  setNodes() {\n    let nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (this._nodes && this._nodes.length) {\n      this.detach();\n    }\n\n    const filteredNodes = nodes.filter(node => {\n      if (node.isAncestorOf(this)) {\n        Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n        return false;\n      }\n\n      return true;\n    });\n    this._nodes = nodes = filteredNodes;\n\n    if (nodes.length === 1 && this.useSingleNodeRotation()) {\n      this.rotation(nodes[0].getAbsoluteRotation());\n    } else {\n      this.rotation(0);\n    }\n\n    this._nodes.forEach(node => {\n      const onChange = () => {\n        if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n          this.rotation(this.nodes()[0].getAbsoluteRotation());\n        }\n\n        this._resetTransformCache();\n\n        if (!this._transforming && !this.isDragging()) {\n          this.update();\n        }\n      };\n\n      const additionalEvents = node._attrsAffectingSize.map(prop => prop + 'Change.' + this._getEventNamespace()).join(' ');\n\n      node.on(additionalEvents, onChange);\n      node.on(TRANSFORM_CHANGE_STR.map(e => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n      node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n\n      this._proxyDrag(node);\n    });\n\n    this._resetTransformCache();\n\n    var elementsCreated = !!this.findOne('.top-left');\n\n    if (elementsCreated) {\n      this.update();\n    }\n\n    return this;\n  }\n\n  _proxyDrag(node) {\n    let lastPos;\n    node.on(`dragstart.${this._getEventNamespace()}`, e => {\n      lastPos = node.getAbsolutePosition();\n\n      if (!this.isDragging() && node !== this.findOne('.back')) {\n        this.startDrag(e, false);\n      }\n    });\n    node.on(`dragmove.${this._getEventNamespace()}`, e => {\n      if (!lastPos) {\n        return;\n      }\n\n      const abs = node.getAbsolutePosition();\n      const dx = abs.x - lastPos.x;\n      const dy = abs.y - lastPos.y;\n      this.nodes().forEach(otherNode => {\n        if (otherNode === node) {\n          return;\n        }\n\n        if (otherNode.isDragging()) {\n          return;\n        }\n\n        const otherAbs = otherNode.getAbsolutePosition();\n        otherNode.setAbsolutePosition({\n          x: otherAbs.x + dx,\n          y: otherAbs.y + dy\n        });\n        otherNode.startDrag(e);\n      });\n      lastPos = null;\n    });\n  }\n\n  getNodes() {\n    return this._nodes || [];\n  }\n\n  getActiveAnchor() {\n    return this._movingAnchorName;\n  }\n\n  detach() {\n    if (this._nodes) {\n      this._nodes.forEach(node => {\n        node.off('.' + this._getEventNamespace());\n      });\n    }\n\n    this._nodes = [];\n\n    this._resetTransformCache();\n  }\n\n  _resetTransformCache() {\n    this._clearCache(NODES_RECT);\n\n    this._clearCache('transform');\n\n    this._clearSelfAndDescendantCache('absoluteTransform');\n  }\n\n  _getNodeRect() {\n    return this._getCache(NODES_RECT, this.__getNodeRect);\n  }\n\n  __getNodeShape(node) {\n    let rot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rotation();\n    let relative = arguments.length > 2 ? arguments[2] : undefined;\n    var rect = node.getClientRect({\n      skipTransform: true,\n      skipShadow: true,\n      skipStroke: this.ignoreStroke()\n    });\n    var absScale = node.getAbsoluteScale(relative);\n    var absPos = node.getAbsolutePosition(relative);\n    var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n    var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n    const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n    const box = {\n      x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n      y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n      width: rect.width * absScale.x,\n      height: rect.height * absScale.y,\n      rotation: rotation\n    };\n    return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n      x: 0,\n      y: 0\n    });\n  }\n\n  __getNodeRect() {\n    var node = this.getNode();\n\n    if (!node) {\n      return {\n        x: -MAX_SAFE_INTEGER,\n        y: -MAX_SAFE_INTEGER,\n        width: 0,\n        height: 0,\n        rotation: 0\n      };\n    }\n\n    const totalPoints = [];\n    this.nodes().map(node => {\n      const box = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      var points = [{\n        x: box.x,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }, {\n        x: box.x,\n        y: box.y + box.height\n      }];\n      var trans = node.getAbsoluteTransform();\n      points.forEach(function (point) {\n        var transformed = trans.point(point);\n        totalPoints.push(transformed);\n      });\n    });\n    const tr = new Util_1.Transform();\n    tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n    var minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n    totalPoints.forEach(function (point) {\n      var transformed = tr.point(point);\n\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    tr.invert();\n    const p = tr.point({\n      x: minX,\n      y: minY\n    });\n    return {\n      x: p.x,\n      y: p.y,\n      width: maxX - minX,\n      height: maxY - minY,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    };\n  }\n\n  getX() {\n    return this._getNodeRect().x;\n  }\n\n  getY() {\n    return this._getNodeRect().y;\n  }\n\n  getWidth() {\n    return this._getNodeRect().width;\n  }\n\n  getHeight() {\n    return this._getNodeRect().height;\n  }\n\n  _createElements() {\n    this._createBack();\n\n    ANCHORS_NAMES.forEach(name => {\n      this._createAnchor(name);\n    });\n\n    this._createAnchor('rotater');\n  }\n\n  _createAnchor(name) {\n    var anchor = new Rect_1.Rect({\n      stroke: 'rgb(0, 161, 255)',\n      fill: 'white',\n      strokeWidth: 1,\n      name: name + ' _anchor',\n      dragDistance: 0,\n      draggable: true,\n      hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n    });\n    var self = this;\n    anchor.on('mousedown touchstart', function (e) {\n      self._handleMouseDown(e);\n    });\n    anchor.on('dragstart', e => {\n      anchor.stopDrag();\n      e.cancelBubble = true;\n    });\n    anchor.on('dragend', e => {\n      e.cancelBubble = true;\n    });\n    anchor.on('mouseenter', () => {\n      var rad = Global_1.Konva.getAngle(this.rotation());\n      var rotateCursor = this.rotateAnchorCursor();\n      var cursor = getCursor(name, rad, rotateCursor);\n      anchor.getStage().content && (anchor.getStage().content.style.cursor = cursor);\n      this._cursorChange = true;\n    });\n    anchor.on('mouseout', () => {\n      anchor.getStage().content && (anchor.getStage().content.style.cursor = '');\n      this._cursorChange = false;\n    });\n    this.add(anchor);\n  }\n\n  _createBack() {\n    var back = new Shape_1.Shape({\n      name: 'back',\n      width: 0,\n      height: 0,\n      draggable: true,\n\n      sceneFunc(ctx, shape) {\n        var tr = shape.getParent();\n        var padding = tr.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.moveTo(shape.width() / 2, -padding);\n\n        if (tr.rotateEnabled() && tr.rotateLineVisible()) {\n          ctx.lineTo(shape.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(shape.height()) - padding);\n        }\n\n        ctx.fillStrokeShape(shape);\n      },\n\n      hitFunc: (ctx, shape) => {\n        if (!this.shouldOverdrawWholeArea()) {\n          return;\n        }\n\n        var padding = this.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.fillStrokeShape(shape);\n      }\n    });\n    this.add(back);\n\n    this._proxyDrag(back);\n\n    back.on('dragstart', e => {\n      e.cancelBubble = true;\n    });\n    back.on('dragmove', e => {\n      e.cancelBubble = true;\n    });\n    back.on('dragend', e => {\n      e.cancelBubble = true;\n    });\n    this.on('dragmove', e => {\n      this.update();\n    });\n  }\n\n  _handleMouseDown(e) {\n    if (this._transforming) {\n      return;\n    }\n\n    this._movingAnchorName = e.target.name().split(' ')[0];\n\n    var attrs = this._getNodeRect();\n\n    var width = attrs.width;\n    var height = attrs.height;\n    var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.sin = Math.abs(height / hypotenuse);\n    this.cos = Math.abs(width / hypotenuse);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('mousemove', this._handleMouseMove);\n      window.addEventListener('touchmove', this._handleMouseMove);\n      window.addEventListener('mouseup', this._handleMouseUp, true);\n      window.addEventListener('touchend', this._handleMouseUp, true);\n    }\n\n    this._transforming = true;\n    var ap = e.target.getAbsolutePosition();\n    var pos = e.target.getStage().getPointerPosition();\n    this._anchorDragOffset = {\n      x: pos.x - ap.x,\n      y: pos.y - ap.y\n    };\n    activeTransformersCount++;\n\n    this._fire('transformstart', {\n      evt: e.evt,\n      target: this.getNode()\n    });\n\n    this._nodes.forEach(target => {\n      target._fire('transformstart', {\n        evt: e.evt,\n        target\n      });\n    });\n  }\n\n  _handleMouseMove(e) {\n    var x, y, newHypotenuse;\n    var anchorNode = this.findOne('.' + this._movingAnchorName);\n    var stage = anchorNode.getStage();\n    stage.setPointersPositions(e);\n    const pp = stage.getPointerPosition();\n    let newNodePos = {\n      x: pp.x - this._anchorDragOffset.x,\n      y: pp.y - this._anchorDragOffset.y\n    };\n    const oldAbs = anchorNode.getAbsolutePosition();\n\n    if (this.anchorDragBoundFunc()) {\n      newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n    }\n\n    anchorNode.setAbsolutePosition(newNodePos);\n    const newAbs = anchorNode.getAbsolutePosition();\n\n    if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n      return;\n    }\n\n    if (this._movingAnchorName === 'rotater') {\n      var attrs = this._getNodeRect();\n\n      x = anchorNode.x() - attrs.width / 2;\n      y = -anchorNode.y() + attrs.height / 2;\n      let delta = Math.atan2(-y, x) + Math.PI / 2;\n\n      if (attrs.height < 0) {\n        delta -= Math.PI;\n      }\n\n      var oldRotation = Global_1.Konva.getAngle(this.rotation());\n      const newRotation = oldRotation + delta;\n      const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n      const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n      const diff = snappedRot - attrs.rotation;\n      const shape = rotateAroundCenter(attrs, diff);\n\n      this._fitNodesInto(shape, e);\n\n      return;\n    }\n\n    var shiftBehavior = this.shiftBehavior();\n    var keepProportion;\n\n    if (shiftBehavior === 'inverted') {\n      keepProportion = this.keepRatio() && !e.shiftKey;\n    } else if (shiftBehavior === 'none') {\n      keepProportion = this.keepRatio();\n    } else {\n      keepProportion = this.keepRatio() || e.shiftKey;\n    }\n\n    var centeredScaling = this.centeredScaling() || e.altKey;\n\n    if (this._movingAnchorName === 'top-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-right').x(),\n          y: this.findOne('.bottom-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-left').x(comparePoint.x - x);\n        this.findOne('.top-left').y(comparePoint.y - y);\n      }\n    } else if (this._movingAnchorName === 'top-center') {\n      this.findOne('.top-left').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'top-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-left').x(),\n          y: this.findOne('.bottom-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-right').x(comparePoint.x + x);\n        this.findOne('.top-right').y(comparePoint.y - y);\n      }\n\n      var pos = anchorNode.position();\n      this.findOne('.top-left').y(pos.y);\n      this.findOne('.bottom-right').x(pos.x);\n    } else if (this._movingAnchorName === 'middle-left') {\n      this.findOne('.top-left').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'middle-right') {\n      this.findOne('.bottom-right').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'bottom-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-right').x(),\n          y: this.findOne('.top-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n        var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        anchorNode.x(comparePoint.x - x);\n        anchorNode.y(comparePoint.y + y);\n      }\n\n      pos = anchorNode.position();\n      this.findOne('.top-left').x(pos.x);\n      this.findOne('.bottom-right').y(pos.y);\n    } else if (this._movingAnchorName === 'bottom-center') {\n      this.findOne('.bottom-right').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'bottom-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-left').x(),\n          y: this.findOne('.top-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.bottom-right').x(comparePoint.x + x);\n        this.findOne('.bottom-right').y(comparePoint.y + y);\n      }\n    } else {\n      console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n    }\n\n    var centeredScaling = this.centeredScaling() || e.altKey;\n\n    if (centeredScaling) {\n      var topLeft = this.findOne('.top-left');\n      var bottomRight = this.findOne('.bottom-right');\n      var topOffsetX = topLeft.x();\n      var topOffsetY = topLeft.y();\n      var bottomOffsetX = this.getWidth() - bottomRight.x();\n      var bottomOffsetY = this.getHeight() - bottomRight.y();\n      bottomRight.move({\n        x: -topOffsetX,\n        y: -topOffsetY\n      });\n      topLeft.move({\n        x: bottomOffsetX,\n        y: bottomOffsetY\n      });\n    }\n\n    var absPos = this.findOne('.top-left').getAbsolutePosition();\n    x = absPos.x;\n    y = absPos.y;\n    var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n    var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n\n    this._fitNodesInto({\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    }, e);\n  }\n\n  _handleMouseUp(e) {\n    this._removeEvents(e);\n  }\n\n  getAbsoluteTransform() {\n    return this.getTransform();\n  }\n\n  _removeEvents(e) {\n    var _a;\n\n    if (this._transforming) {\n      this._transforming = false;\n\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('mousemove', this._handleMouseMove);\n        window.removeEventListener('touchmove', this._handleMouseMove);\n        window.removeEventListener('mouseup', this._handleMouseUp, true);\n        window.removeEventListener('touchend', this._handleMouseUp, true);\n      }\n\n      var node = this.getNode();\n      activeTransformersCount--;\n\n      this._fire('transformend', {\n        evt: e,\n        target: node\n      });\n\n      (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n\n      if (node) {\n        this._nodes.forEach(target => {\n          var _a;\n\n          target._fire('transformend', {\n            evt: e,\n            target\n          });\n\n          (_a = target.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n      }\n\n      this._movingAnchorName = null;\n    }\n  }\n\n  _fitNodesInto(newAttrs, evt) {\n    var oldAttrs = this._getNodeRect();\n\n    const minSize = 1;\n\n    if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n\n    if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n\n    var t = new Util_1.Transform();\n    t.rotate(Global_1.Konva.getAngle(this.rotation()));\n\n    if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n      const offset = t.point({\n        x: -this.padding() * 2,\n        y: 0\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      newAttrs.width += this.padding() * 2;\n      this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n    } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n      const offset = t.point({\n        x: this.padding() * 2,\n        y: 0\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.width += this.padding() * 2;\n    }\n\n    if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n      const offset = t.point({\n        x: 0,\n        y: -this.padding() * 2\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n    } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n      const offset = t.point({\n        x: 0,\n        y: this.padding() * 2\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n    }\n\n    if (this.boundBoxFunc()) {\n      const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n\n      if (bounded) {\n        newAttrs = bounded;\n      } else {\n        Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n      }\n    }\n\n    const baseSize = 10000000;\n    const oldTr = new Util_1.Transform();\n    oldTr.translate(oldAttrs.x, oldAttrs.y);\n    oldTr.rotate(oldAttrs.rotation);\n    oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n    const newTr = new Util_1.Transform();\n    const newScaleX = newAttrs.width / baseSize;\n    const newScaleY = newAttrs.height / baseSize;\n\n    if (this.flipEnabled() === false) {\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.translate(newAttrs.width < 0 ? newAttrs.width : 0, newAttrs.height < 0 ? newAttrs.height : 0);\n      newTr.scale(Math.abs(newScaleX), Math.abs(newScaleY));\n    } else {\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.scale(newScaleX, newScaleY);\n    }\n\n    const delta = newTr.multiply(oldTr.invert());\n\n    this._nodes.forEach(node => {\n      var _a;\n\n      const parentTransform = node.getParent().getAbsoluteTransform();\n      const localTransform = node.getTransform().copy();\n      localTransform.translate(node.offsetX(), node.offsetY());\n      const newLocalTransform = new Util_1.Transform();\n      newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n      const attrs = newLocalTransform.decompose();\n      node.setAttrs(attrs);\n      (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    });\n\n    this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n\n    this._nodes.forEach(node => {\n      this._fire('transform', {\n        evt: evt,\n        target: node\n      });\n\n      node._fire('transform', {\n        evt: evt,\n        target: node\n      });\n    });\n\n    this._resetTransformCache();\n\n    this.update();\n    this.getLayer().batchDraw();\n  }\n\n  forceUpdate() {\n    this._resetTransformCache();\n\n    this.update();\n  }\n\n  _batchChangeChild(selector, attrs) {\n    const anchor = this.findOne(selector);\n    anchor.setAttrs(attrs);\n  }\n\n  update() {\n    var _a;\n\n    var attrs = this._getNodeRect();\n\n    this.rotation(Util_1.Util._getRotation(attrs.rotation));\n    var width = attrs.width;\n    var height = attrs.height;\n    var enabledAnchors = this.enabledAnchors();\n    var resizeEnabled = this.resizeEnabled();\n    var padding = this.padding();\n    var anchorSize = this.anchorSize();\n    const anchors = this.find('._anchor');\n    anchors.forEach(node => {\n      node.setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: this.anchorStroke(),\n        strokeWidth: this.anchorStrokeWidth(),\n        fill: this.anchorFill(),\n        cornerRadius: this.anchorCornerRadius()\n      });\n    });\n\n    this._batchChangeChild('.top-left', {\n      x: 0,\n      y: 0,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n    });\n\n    this._batchChangeChild('.top-center', {\n      x: width / 2,\n      y: 0,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n    });\n\n    this._batchChangeChild('.top-right', {\n      x: width,\n      y: 0,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n    });\n\n    this._batchChangeChild('.middle-left', {\n      x: 0,\n      y: height / 2,\n      offsetX: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n    });\n\n    this._batchChangeChild('.middle-right', {\n      x: width,\n      y: height / 2,\n      offsetX: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n    });\n\n    this._batchChangeChild('.bottom-left', {\n      x: 0,\n      y: height,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n    });\n\n    this._batchChangeChild('.bottom-center', {\n      x: width / 2,\n      y: height,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n    });\n\n    this._batchChangeChild('.bottom-right', {\n      x: width,\n      y: height,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n    });\n\n    this._batchChangeChild('.rotater', {\n      x: width / 2,\n      y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n      visible: this.rotateEnabled()\n    });\n\n    this._batchChangeChild('.back', {\n      width: width,\n      height: height,\n      visible: this.borderEnabled(),\n      stroke: this.borderStroke(),\n      strokeWidth: this.borderStrokeWidth(),\n      dash: this.borderDash(),\n      x: 0,\n      y: 0\n    });\n\n    const styleFunc = this.anchorStyleFunc();\n\n    if (styleFunc) {\n      anchors.forEach(node => {\n        styleFunc(node);\n      });\n    }\n\n    (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n  }\n\n  isTransforming() {\n    return this._transforming;\n  }\n\n  stopTransform() {\n    if (this._transforming) {\n      this._removeEvents();\n\n      var anchorNode = this.findOne('.' + this._movingAnchorName);\n\n      if (anchorNode) {\n        anchorNode.stopDrag();\n      }\n    }\n  }\n\n  destroy() {\n    if (this.getStage() && this._cursorChange) {\n      this.getStage().content && (this.getStage().content.style.cursor = '');\n    }\n\n    Group_1.Group.prototype.destroy.call(this);\n    this.detach();\n\n    this._removeEvents();\n\n    return this;\n  }\n\n  toObject() {\n    return Node_1.Node.prototype.toObject.call(this);\n  }\n\n  clone(obj) {\n    var node = Node_1.Node.prototype.clone.call(this, obj);\n    return node;\n  }\n\n  getClientRect() {\n    if (this.nodes().length > 0) {\n      return super.getClientRect();\n    } else {\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n  }\n\n}\n\nexports.Transformer = Transformer;\n\nTransformer.isTransforming = () => {\n  return activeTransformersCount > 0;\n};\n\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util_1.Util.warn('enabledAnchors value should be an array');\n  }\n\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util_1.Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n\n  return val || [];\n}\n\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateLineVisible', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorCursor', 'crosshair');\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","Transformer","Util_1","require","Factory_1","Node_1","Shape_1","Rect_1","Group_1","Global_1","Validators_1","Global_2","EVENTS_NAME","ATTR_CHANGE_LIST","map","e","join","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","Konva","_global","getCursor","anchorName","rad","rotateCursor","Util","degToRad","angle","radToDeg","_inRange","error","ANCHORS_NAMES","MAX_SAFE_INTEGER","getCenter","shape","x","width","Math","cos","rotation","height","sin","y","rotateAroundPoint","angleRad","point","rotateAroundCenter","deltaRad","center","getSnap","snaps","newRotationRad","tol","snapped","i","length","getAngle","absDiff","abs","PI","dif","min","activeTransformersCount","Group","constructor","config","_movingAnchorName","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","on","getNode","attachTo","node","setNode","warn","setNodes","_nodes","_getEventNamespace","_id","nodes","detach","filteredNodes","filter","isAncestorOf","useSingleNodeRotation","getAbsoluteRotation","forEach","onChange","_resetTransformCache","isDragging","additionalEvents","_attrsAffectingSize","prop","_proxyDrag","elementsCreated","findOne","lastPos","getAbsolutePosition","startDrag","dx","dy","otherNode","otherAbs","setAbsolutePosition","getNodes","getActiveAnchor","off","_clearCache","_clearSelfAndDescendantCache","_getNodeRect","_getCache","__getNodeRect","__getNodeShape","rot","relative","rect","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","box","totalPoints","points","trans","getAbsoluteTransform","transformed","push","tr","Transform","rotate","minX","Infinity","minY","maxX","maxY","undefined","max","invert","p","getX","getY","getWidth","getHeight","_createBack","name","_createAnchor","anchor","Rect","stroke","fill","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","rotateAnchorCursor","cursor","getStage","content","style","_cursorChange","add","back","Shape","sceneFunc","ctx","getParent","padding","beginPath","moveTo","rotateEnabled","rotateLineVisible","lineTo","rotateAnchorOffset","_sign","fillStrokeShape","hitFunc","shouldOverdrawWholeArea","target","split","attrs","hypotenuse","sqrt","pow","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","evt","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","anchorDragBoundFunc","newAbs","delta","atan2","oldRotation","newRotation","rotationSnapTolerance","snappedRot","rotationSnaps","diff","_fitNodesInto","shiftBehavior","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","Error","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","move","_removeEvents","getTransform","_a","removeEventListener","getLayer","batchDraw","newAttrs","oldAttrs","minSize","t","indexOf","offset","replace","boundBoxFunc","bounded","baseSize","oldTr","translate","scale","newTr","newScaleX","newScaleY","flipEnabled","multiply","parentTransform","localTransform","copy","newLocalTransform","decompose","setAttrs","_getRotation","forceUpdate","_batchChangeChild","selector","enabledAnchors","resizeEnabled","anchorSize","anchors","find","anchorStroke","anchorStrokeWidth","anchorFill","cornerRadius","anchorCornerRadius","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","styleFunc","anchorStyleFunc","isTransforming","stopTransform","destroy","prototype","call","toObject","Node","clone","obj","validateAnchors","val","Array","className","_registerNode","Factory","addGetterSetter","getBooleanValidator","getNumberValidator","backCompat","lineEnabled","rotateHandlerOffset","enabledHandlers"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/shapes/Transformer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transformer = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Shape_1 = require(\"../Shape\");\nconst Rect_1 = require(\"./Rect\");\nconst Group_1 = require(\"../Group\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n    'anchorStyleFuncChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad, rotateCursor) {\n    if (anchorName === 'rotater') {\n        return rotateCursor;\n    }\n    rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return {\n        ...shape,\n        rotation: shape.rotation + angleRad,\n        x,\n        y,\n    };\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Global_1.Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nlet activeTransformersCount = 0;\nclass Transformer extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this._movingAnchorName = null;\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        const filteredNodes = nodes.filter((node) => {\n            if (node.isAncestorOf(this)) {\n                Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n                return false;\n            }\n            return true;\n        });\n        this._nodes = nodes = filteredNodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach((name) => {\n            this._createAnchor(name);\n        });\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Global_1.Konva.getAngle(this.rotation());\n            var rotateCursor = this.rotateAnchorCursor();\n            var cursor = getCursor(name, rad, rotateCursor);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx, shape) {\n                var tr = shape.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.moveTo(shape.width() / 2, -padding);\n                if (tr.rotateEnabled() && tr.rotateLineVisible()) {\n                    ctx.lineTo(shape.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(shape.height()) - padding);\n                }\n                ctx.fillStrokeShape(shape);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        if (this._transforming) {\n            return;\n        }\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        activeTransformersCount++;\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var shiftBehavior = this.shiftBehavior();\n        var keepProportion;\n        if (shiftBehavior === 'inverted') {\n            keepProportion = this.keepRatio() && !e.shiftKey;\n        }\n        else if (shiftBehavior === 'none') {\n            keepProportion = this.keepRatio();\n        }\n        else {\n            keepProportion = this.keepRatio() || e.shiftKey;\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        var _a;\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            activeTransformersCount--;\n            this._fire('transformend', { evt: e, target: node });\n            (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n            if (node) {\n                this._nodes.forEach((target) => {\n                    var _a;\n                    target._fire('transformend', { evt: e, target });\n                    (_a = target.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Util_1.Transform();\n        const newScaleX = newAttrs.width / baseSize;\n        const newScaleY = newAttrs.height / baseSize;\n        if (this.flipEnabled() === false) {\n            newTr.translate(newAttrs.x, newAttrs.y);\n            newTr.rotate(newAttrs.rotation);\n            newTr.translate(newAttrs.width < 0 ? newAttrs.width : 0, newAttrs.height < 0 ? newAttrs.height : 0);\n            newTr.scale(Math.abs(newScaleX), Math.abs(newScaleY));\n        }\n        else {\n            newTr.translate(newAttrs.x, newAttrs.y);\n            newTr.rotate(newAttrs.rotation);\n            newTr.scale(newScaleX, newScaleY);\n        }\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._nodes.forEach((node) => {\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n        });\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        const anchors = this.find('._anchor');\n        anchors.forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        const styleFunc = this.anchorStyleFunc();\n        if (styleFunc) {\n            anchors.forEach((node) => {\n                styleFunc(node);\n            });\n        }\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node_1.Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        var node = Node_1.Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nexports.Transformer = Transformer;\nTransformer.isTransforming = () => {\n    return activeTransformersCount > 0;\n};\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateLineVisible', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorCursor', 'crosshair');\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}