{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Path = void 0;\n\nconst Factory_1 = require(\"../Factory\");\n\nconst Shape_1 = require(\"../Shape\");\n\nconst Global_1 = require(\"../Global\");\n\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\n\nclass Path extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this.dataArray = [];\n    this.pathLength = 0;\n\n    this._readDataAttribute();\n\n    this.on('dataChange.konva', function () {\n      this._readDataAttribute();\n    });\n  }\n\n  _readDataAttribute() {\n    this.dataArray = Path.parsePathData(this.data());\n    this.pathLength = Path.getPathLength(this.dataArray);\n  }\n\n  _sceneFunc(context) {\n    var ca = this.dataArray;\n    context.beginPath();\n    var isClosed = false;\n\n    for (var n = 0; n < ca.length; n++) {\n      var c = ca[n].command;\n      var p = ca[n].points;\n\n      switch (c) {\n        case 'L':\n          context.lineTo(p[0], p[1]);\n          break;\n\n        case 'M':\n          context.moveTo(p[0], p[1]);\n          break;\n\n        case 'C':\n          context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n          break;\n\n        case 'Q':\n          context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n          break;\n\n        case 'A':\n          var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n\n        case 'z':\n          isClosed = true;\n          context.closePath();\n          break;\n      }\n    }\n\n    if (!isClosed && !this.hasFill()) {\n      context.strokeShape(this);\n    } else {\n      context.fillStrokeShape(this);\n    }\n  }\n\n  getSelfRect() {\n    var points = [];\n    this.dataArray.forEach(function (data) {\n      if (data.command === 'A') {\n        var start = data.points[4];\n        var dTheta = data.points[5];\n        var end = data.points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n\n        if (dTheta < 0) {\n          for (let t = start - inc; t > end; t -= inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        } else {\n          for (let t = start + inc; t < end; t += inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        }\n      } else if (data.command === 'C') {\n        for (let t = 0.0; t <= 1; t += 0.01) {\n          const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n          points.push(point.x, point.y);\n        }\n      } else {\n        points = points.concat(data.points);\n      }\n    });\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n\n      if (!isNaN(x)) {\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n      }\n\n      if (!isNaN(y)) {\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n    }\n\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  getLength() {\n    return this.pathLength;\n  }\n\n  getPointAtLength(length) {\n    return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n  }\n\n  static getLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n\n  static getPathLength(dataArray) {\n    let pathLength = 0;\n\n    for (var i = 0; i < dataArray.length; ++i) {\n      pathLength += dataArray[i].pathLength;\n    }\n\n    return pathLength;\n  }\n\n  static getPointAtLengthOfDataArray(length, dataArray) {\n    var point,\n        i = 0,\n        ii = dataArray.length;\n\n    if (!ii) {\n      return null;\n    }\n\n    while (i < ii && length > dataArray[i].pathLength) {\n      length -= dataArray[i].pathLength;\n      ++i;\n    }\n\n    if (i === ii) {\n      point = dataArray[i - 1].points.slice(-2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n\n    if (length < 0.01) {\n      point = dataArray[i].points.slice(0, 2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n\n    var cp = dataArray[i];\n    var p = cp.points;\n\n    switch (cp.command) {\n      case 'L':\n        return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n\n      case 'C':\n        return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n\n      case 'Q':\n        return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n\n      case 'A':\n        var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6];\n        theta += dTheta * length / cp.pathLength;\n        return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n    }\n\n    return null;\n  }\n\n  static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n    fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n    const len = this.getLineLength(P1x, P1y, P2x, P2y);\n\n    if (len < 1e-10) {\n      return {\n        x: P1x,\n        y: P1y\n      };\n    }\n\n    if (P2x === P1x) {\n      return {\n        x: fromX,\n        y: fromY + (P2y > P1y ? dist : -dist)\n      };\n    }\n\n    const m = (P2y - P1y) / (P2x - P1x);\n    const run = Math.sqrt(dist * dist / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const rise = m * run;\n\n    if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n      return {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    }\n\n    const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n    const ix = P1x + u * (P2x - P1x);\n    const iy = P1y + u * (P2y - P1y);\n    const pRise = this.getLineLength(fromX, fromY, ix, iy);\n    const pRun = Math.sqrt(dist * dist - pRise * pRise);\n    const adjustedRun = Math.sqrt(pRun * pRun / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const adjustedRise = m * adjustedRun;\n    return {\n      x: ix + adjustedRun,\n      y: iy + adjustedRise\n    };\n  }\n\n  static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n    function CB1(t) {\n      return t * t * t;\n    }\n\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n    function QB1(t) {\n      return t * t;\n    }\n\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n        sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  }\n\n  static parsePathData(data) {\n    if (!data) {\n      return [];\n    }\n\n    var cs = data;\n    var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    var cpx = 0;\n    var cpy = 0;\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n      coords.length = 0;\n\n      while (match = re.exec(str)) {\n        coords.push(match[0]);\n      }\n\n      var p = [];\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        if (coords[j] === '00') {\n          p.push(0, 0);\n          continue;\n        }\n\n        var parsed = parseFloat(coords[j]);\n\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          break;\n        }\n\n        var cmd = '';\n        var points = [];\n        var startX = cpx,\n            startY = cpy;\n        var prevCmd, ctlPtx, ctlPty;\n        var rx, ry, psi, fa, fs, x1, y1;\n\n        switch (c) {\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n\n            points.push(cpx, cpy);\n            c = 'l';\n            break;\n\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'c':\n            points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  }\n\n  static calcLength(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n\n      case 'C':\n        return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n\n      case 'Q':\n        return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n\n      case 'A':\n        len = 0.0;\n        var start = points[4];\n        var dTheta = points[5];\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n\n        p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n\n        if (dTheta < 0) {\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n\n        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n        return len;\n    }\n\n    return 0;\n  }\n\n  static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n\n    if (fa === fs) {\n      f *= -1;\n    }\n\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function (v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n\n    var vRatio = function (u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n\n    var vAngle = function (u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  }\n\n}\n\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');","map":{"version":3,"names":["Object","defineProperty","exports","value","Path","Factory_1","require","Shape_1","Global_1","BezierFunctions_1","Shape","constructor","config","dataArray","pathLength","_readDataAttribute","on","parsePathData","data","getPathLength","_sceneFunc","context","ca","beginPath","isClosed","n","length","c","command","p","points","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","hasFill","strokeShape","fillStrokeShape","getSelfRect","forEach","start","end","inc","Math","PI","abs","t","point","getPointOnEllipticalArc","push","x","y","getPointOnCubicBezier","concat","minX","maxX","minY","maxY","i","isNaN","min","max","width","height","getLength","getPointAtLength","getPointAtLengthOfDataArray","getLineLength","x1","y1","x2","y2","sqrt","ii","slice","cp","getPointOnLine","t2length","getCubicArcLength","getPointOnQuadraticBezier","getQuadraticArcLength","dist","P1x","P1y","P2x","P2y","fromX","fromY","len","m","run","rise","u","ix","iy","pRise","pRun","adjustedRun","adjustedRise","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","cos","sinPsi","sin","pt","cs","cc","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","charAt","exec","j","jlen","parsed","parseFloat","cmd","startX","startY","prevCmd","ctlPtx","ctlPty","fa","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","undefined","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","prototype","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/shapes/Path.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\nclass Path extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n        });\n    }\n    _readDataAttribute() {\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = Path.getPathLength(this.dataArray);\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPathLength(dataArray) {\n        let pathLength = 0;\n        for (var i = 0; i < dataArray.length; ++i) {\n            pathLength += dataArray[i].pathLength;\n        }\n        return pathLength;\n    }\n    static getPointAtLengthOfDataArray(length, dataArray) {\n        var point, i = 0, ii = dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > dataArray[i].pathLength) {\n            length -= dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n        fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n        const len = this.getLineLength(P1x, P1y, P2x, P2y);\n        if (len < 1e-10) {\n            return { x: P1x, y: P1y };\n        }\n        if (P2x === P1x) {\n            return { x: fromX, y: fromY + (P2y > P1y ? dist : -dist) };\n        }\n        const m = (P2y - P1y) / (P2x - P1x);\n        const run = Math.sqrt((dist * dist) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const rise = m * run;\n        if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n            return { x: fromX + run, y: fromY + rise };\n        }\n        const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n        const ix = P1x + u * (P2x - P1x);\n        const iy = P1y + u * (P2y - P1y);\n        const pRise = this.getLineLength(fromX, fromY, ix, iy);\n        const pRun = Math.sqrt(dist * dist - pRise * pRise);\n        const adjustedRun = Math.sqrt((pRun * pRun) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const adjustedRise = m * adjustedRun;\n        return { x: ix + adjustedRun, y: iy + adjustedRise };\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = '';\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n            case 'Q':\n                return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}