{"ast":null,"code":"var _jsxFileName = \"D:\\\\screenshort-extension\\\\image-editor-react\\\\src\\\\component\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style/main.scss';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { GrRotateLeft, GrRotateRight, GrEdit, GrSuperscript } from 'react-icons/gr';\nimport { CgMergeVertical, CgMergeHorizontal } from 'react-icons/cg';\nimport { IoMdUndo, IoMdRedo, IoIosImage } from 'react-icons/io';\nimport storeData from './LinkedList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const filterElement = [{\n    name: 'brightness',\n    maxValue: 200\n  }, {\n    name: 'grayscale',\n    maxValue: 100\n  }, {\n    name: 'sepia',\n    maxValue: 100\n  }, {\n    name: 'saturate',\n    maxValue: 200\n  }, {\n    name: 'contrast',\n    maxValue: 200\n  }, {\n    name: 'hueRotate',\n    maxValue: 360\n  }];\n  const [property, setProperty] = useState({\n    name: 'brightness',\n    maxValue: 200\n  });\n  const [details, setDetails] = useState(null);\n  const [crop, setCrop] = useState({});\n  const [drawing, setDrawing] = useState(false);\n  const [textMode, setTextMode] = useState(false);\n  const [text, setText] = useState('');\n  const canvasRef = useRef(null);\n  const [state, setState] = useState({\n    image: '',\n    brightness: 100,\n    grayscale: 0,\n    sepia: 0,\n    saturate: 100,\n    contrast: 100,\n    hueRotate: 0,\n    rotate: 0,\n    vartical: 1,\n    horizental: 1\n  });\n  useEffect(() => {\n    if (details) {\n      drawImage();\n    }\n  }, [state, details, crop]);\n\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!details || !canvas) return;\n    const {\n      width,\n      height\n    } = canvas;\n    ctx.clearRect(0, 0, width, height);\n    ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\n    ctx.translate(width / 2, height / 2);\n    ctx.rotate(state.rotate * Math.PI / 180);\n    ctx.scale(state.vartical, state.horizental);\n    ctx.drawImage(details, -width / 2, -height / 2, width, height);\n\n    if (textMode && text) {\n      ctx.font = '20px Arial';\n      ctx.fillStyle = '#000000'; // Text color\n\n      ctx.fillText(text, width / 2, height / 2); // Add text in the center\n    }\n  };\n\n  const inputHandle = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const leftRotate = () => {\n    setState(prevState => ({ ...prevState,\n      rotate: prevState.rotate - 90\n    }));\n    storeData.insert({ ...state,\n      rotate: state.rotate - 90\n    });\n  };\n\n  const rightRotate = () => {\n    setState(prevState => ({ ...prevState,\n      rotate: prevState.rotate + 90\n    }));\n    storeData.insert({ ...state,\n      rotate: state.rotate + 90\n    });\n  };\n\n  const varticalFlip = () => {\n    setState(prevState => ({ ...prevState,\n      vartical: prevState.vartical === 1 ? -1 : 1\n    }));\n    storeData.insert({ ...state,\n      vartical: prevState.vartical === 1 ? -1 : 1\n    });\n  };\n\n  const horizentalFlip = () => {\n    setState(prevState => ({ ...prevState,\n      horizental: prevState.horizental === 1 ? -1 : 1\n    }));\n    storeData.insert({ ...state,\n      horizental: prevState.horizental === 1 ? -1 : 1\n    });\n  };\n\n  const redo = () => {\n    const data = storeData.redoEdit();\n\n    if (data) {\n      setState(data);\n    }\n  };\n\n  const undo = () => {\n    const data = storeData.undoEdit();\n\n    if (data) {\n      setState(data);\n    }\n  };\n\n  const imageHandle = e => {\n    if (e.target.files.length !== 0) {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const img = new Image();\n        img.src = reader.result;\n\n        img.onload = () => {\n          setDetails(img);\n          setState({ ...state,\n            image: reader.result\n          });\n          storeData.insert({\n            image: reader.result,\n            brightness: 100,\n            grayscale: 0,\n            sepia: 0,\n            saturate: 100,\n            contrast: 100,\n            hueRotate: 0,\n            rotate: 0,\n            vartical: 1,\n            horizental: 1\n          });\n        };\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const imageCrop = () => {\n    if (!details || !crop || !canvasRef.current) return;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = details.naturalWidth / details.width;\n    const scaleY = details.naturalHeight / details.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(details, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const base64Url = canvas.toDataURL('image/jpeg');\n    setState({ ...state,\n      image: base64Url\n    });\n  };\n\n  const saveImage = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!details) return;\n    canvas.width = details.naturalWidth;\n    canvas.height = details.naturalHeight;\n    ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(state.rotate * Math.PI / 180);\n    ctx.scale(state.vartical, state.horizental);\n    ctx.drawImage(details, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n    const link = document.createElement('a');\n    link.download = 'image_edit.jpg';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n\n  const startDrawing = e => {\n    if (drawing) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    }\n  };\n\n  const draw = e => {\n    if (drawing) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.strokeStyle = '#000000'; // Set the pencil color (black)\n\n      ctx.lineWidth = 2; // Set the pencil width\n\n      ctx.lineCap = 'round'; // Set the line cap for smoother lines\n\n      ctx.stroke();\n    }\n  };\n\n  const stopDrawing = () => {\n    if (drawing) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.closePath();\n    }\n  };\n\n  const enableDrawing = () => {\n    setDrawing(!drawing);\n\n    if (textMode) {\n      setTextMode(false); // Disable text mode when enabling drawing\n    }\n  };\n\n  const addText = () => {\n    if (text) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.font = '20px Arial';\n      ctx.fillStyle = '#000000'; // Text color\n\n      ctx.fillText(text, canvas.width / 2, canvas.height / 2); // Add text to the center\n\n      setTextMode(false); // Disable text mode after adding text\n\n      setText(''); // Clear text input\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: imageHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), details && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: details.naturalWidth,\n        height: details.naturalHeight,\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leftRotate,\n          children: [\" \", /*#__PURE__*/_jsxDEV(GrRotateLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 55\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: rightRotate,\n          children: [\" \", /*#__PURE__*/_jsxDEV(GrRotateRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: varticalFlip,\n          children: [\" \", /*#__PURE__*/_jsxDEV(CgMergeVertical, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 57\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: horizentalFlip,\n          children: [\" \", /*#__PURE__*/_jsxDEV(CgMergeHorizontal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 59\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undo,\n          children: [\" \", /*#__PURE__*/_jsxDEV(IoMdUndo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: redo,\n          children: [\" \", /*#__PURE__*/_jsxDEV(IoMdRedo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: imageCrop,\n          children: [\" \", /*#__PURE__*/_jsxDEV(IoIosImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 54\n          }, this), \" Crop \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveImage,\n          children: \"Save Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: enableDrawing,\n          children: drawing ? 'Stop Drawing' : 'Start Drawing'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTextMode(!textMode),\n          children: textMode ? 'Cancel Text' : 'Add Text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), textMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: text,\n            onChange: e => setText(e.target.value),\n            placeholder: \"Enter text here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addText,\n            children: \"Add Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"Nq0sRUxLp1RSCZzQdx5a9s9syhY=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactCrop","GrRotateLeft","GrRotateRight","GrEdit","GrSuperscript","CgMergeVertical","CgMergeHorizontal","IoMdUndo","IoMdRedo","IoIosImage","storeData","Main","filterElement","name","maxValue","property","setProperty","details","setDetails","crop","setCrop","drawing","setDrawing","textMode","setTextMode","text","setText","canvasRef","state","setState","image","brightness","grayscale","sepia","saturate","contrast","hueRotate","rotate","vartical","horizental","drawImage","canvas","current","ctx","getContext","width","height","clearRect","filter","translate","Math","PI","scale","font","fillStyle","fillText","inputHandle","e","target","value","leftRotate","prevState","insert","rightRotate","varticalFlip","horizentalFlip","redo","data","redoEdit","undo","undoEdit","imageHandle","files","length","reader","FileReader","onload","img","Image","src","result","readAsDataURL","imageCrop","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","x","y","base64Url","toDataURL","saveImage","link","download","href","click","startDrawing","beginPath","moveTo","nativeEvent","offsetX","offsetY","draw","lineTo","strokeStyle","lineWidth","lineCap","stroke","stopDrawing","closePath","enableDrawing","addText"],"sources":["D:/screenshort-extension/image-editor-react/src/component/Main.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './style/main.scss';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { GrRotateLeft, GrRotateRight, GrEdit, GrSuperscript } from 'react-icons/gr';\r\nimport { CgMergeVertical, CgMergeHorizontal } from 'react-icons/cg';\r\nimport { IoMdUndo, IoMdRedo, IoIosImage } from 'react-icons/io';\r\nimport storeData from './LinkedList';\r\n\r\nconst Main = () => {\r\n    const filterElement = [\r\n        { name: 'brightness', maxValue: 200 },\r\n        { name: 'grayscale', maxValue: 100 },\r\n        { name: 'sepia', maxValue: 100 },\r\n        { name: 'saturate', maxValue: 200 },\r\n        { name: 'contrast', maxValue: 200 },\r\n        { name: 'hueRotate', maxValue: 360 }\r\n    ];\r\n\r\n    const [property, setProperty] = useState({ name: 'brightness', maxValue: 200 });\r\n    const [details, setDetails] = useState(null);\r\n    const [crop, setCrop] = useState({});\r\n    const [drawing, setDrawing] = useState(false);\r\n    const [textMode, setTextMode] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const canvasRef = useRef(null);\r\n    \r\n    const [state, setState] = useState({\r\n        image: '',\r\n        brightness: 100,\r\n        grayscale: 0,\r\n        sepia: 0,\r\n        saturate: 100,\r\n        contrast: 100,\r\n        hueRotate: 0,\r\n        rotate: 0,\r\n        vartical: 1,\r\n        horizental: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (details) {\r\n            drawImage();\r\n        }\r\n    }, [state, details, crop]);\r\n\r\n    const drawImage = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!details || !canvas) return;\r\n        \r\n        const { width, height } = canvas;\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\r\n        ctx.translate(width / 2, height / 2);\r\n        ctx.rotate(state.rotate * Math.PI / 180);\r\n        ctx.scale(state.vartical, state.horizental);\r\n        ctx.drawImage(details, -width / 2, -height / 2, width, height);\r\n\r\n        if (textMode && text) {\r\n            ctx.font = '20px Arial';\r\n            ctx.fillStyle = '#000000'; // Text color\r\n            ctx.fillText(text, width / 2, height / 2); // Add text in the center\r\n        }\r\n    };\r\n\r\n    const inputHandle = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const leftRotate = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rotate: prevState.rotate - 90\r\n        }));\r\n        storeData.insert({...state, rotate: state.rotate - 90});\r\n    };\r\n\r\n    const rightRotate = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rotate: prevState.rotate + 90\r\n        }));\r\n        storeData.insert({...state, rotate: state.rotate + 90});\r\n    };\r\n\r\n    const varticalFlip = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            vartical: prevState.vartical === 1 ? -1 : 1\r\n        }));\r\n        storeData.insert({...state, vartical: prevState.vartical === 1 ? -1 : 1});\r\n    };\r\n\r\n    const horizentalFlip = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            horizental: prevState.horizental === 1 ? -1 : 1\r\n        }));\r\n        storeData.insert({...state, horizental: prevState.horizental === 1 ? -1 : 1});\r\n    };\r\n\r\n    const redo = () => {\r\n        const data = storeData.redoEdit();\r\n        if (data) {\r\n            setState(data);\r\n        }\r\n    };\r\n\r\n    const undo = () => {\r\n        const data = storeData.undoEdit();\r\n        if (data) {\r\n            setState(data);\r\n        }\r\n    };\r\n\r\n    const imageHandle = (e) => {\r\n        if (e.target.files.length !== 0) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const img = new Image();\r\n                img.src = reader.result;\r\n                img.onload = () => {\r\n                    setDetails(img);\r\n                    setState({\r\n                        ...state,\r\n                        image: reader.result\r\n                    });\r\n                    storeData.insert({\r\n                        image: reader.result,\r\n                        brightness: 100,\r\n                        grayscale: 0,\r\n                        sepia: 0,\r\n                        saturate: 100,\r\n                        contrast: 100,\r\n                        hueRotate: 0,\r\n                        rotate: 0,\r\n                        vartical: 1,\r\n                        horizental: 1\r\n                    });\r\n                };\r\n            };\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const imageCrop = () => {\r\n        if (!details || !crop || !canvasRef.current) return;\r\n        \r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        const scaleX = details.naturalWidth / details.width;\r\n        const scaleY = details.naturalHeight / details.height;\r\n\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n\r\n        ctx.drawImage(\r\n            details,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        const base64Url = canvas.toDataURL('image/jpeg');\r\n        setState({\r\n            ...state,\r\n            image: base64Url\r\n        });\r\n    };\r\n\r\n    const saveImage = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        if (!details) return;\r\n\r\n        canvas.width = details.naturalWidth;\r\n        canvas.height = details.naturalHeight;\r\n        \r\n        ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(state.rotate * Math.PI / 180);\r\n        ctx.scale(state.vartical, state.horizental);\r\n        ctx.drawImage(\r\n            details,\r\n            -canvas.width / 2,\r\n            -canvas.height / 2,\r\n            canvas.width,\r\n            canvas.height\r\n        );\r\n\r\n        const link = document.createElement('a');\r\n        link.download = 'image_edit.jpg';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n    };\r\n\r\n    const startDrawing = (e) => {\r\n        if (drawing) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n        }\r\n    };\r\n    \r\n    const draw = (e) => {\r\n        if (drawing) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n            ctx.strokeStyle = '#000000'; // Set the pencil color (black)\r\n            ctx.lineWidth = 2; // Set the pencil width\r\n            ctx.lineCap = 'round'; // Set the line cap for smoother lines\r\n            ctx.stroke();\r\n        }\r\n    };\r\n    \r\n    const stopDrawing = () => {\r\n        if (drawing) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.closePath();\r\n        }\r\n    };\r\n    \r\n    const enableDrawing = () => {\r\n        setDrawing(!drawing);\r\n        if (textMode) {\r\n            setTextMode(false); // Disable text mode when enabling drawing\r\n        }\r\n    };    \r\n\r\n    const addText = () => {\r\n        if (text) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.font = '20px Arial';\r\n            ctx.fillStyle = '#000000'; // Text color\r\n            ctx.fillText(text, canvas.width / 2, canvas.height / 2); // Add text to the center\r\n            setTextMode(false); // Disable text mode after adding text\r\n            setText(''); // Clear text input\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <input type=\"file\" accept=\"image/*\" onChange={imageHandle} />\r\n            {details && (\r\n                <div>\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={details.naturalWidth}\r\n                        height={details.naturalHeight}\r\n                        onMouseDown={startDrawing}\r\n                        onMouseMove={draw}\r\n                        onMouseUp={stopDrawing}\r\n                        onMouseOut={stopDrawing}\r\n                    />\r\n                    <div className=\"controls\">\r\n                        <button onClick={leftRotate}> <GrRotateLeft /> </button>\r\n                        <button onClick={rightRotate}> <GrRotateRight /> </button>\r\n                        <button onClick={varticalFlip}> <CgMergeVertical /> </button>\r\n                        <button onClick={horizentalFlip}> <CgMergeHorizontal /> </button>\r\n                        <button onClick={undo}> <IoMdUndo /> </button>\r\n                        <button onClick={redo}> <IoMdRedo /> </button>\r\n                        <button onClick={imageCrop}> <IoIosImage /> Crop </button>\r\n                        <button onClick={saveImage}>Save Image</button>\r\n                        <button onClick={enableDrawing}>{drawing ? 'Stop Drawing' : 'Start Drawing'}</button>\r\n                        <button onClick={() => setTextMode(!textMode)}>{textMode ? 'Cancel Text' : 'Add Text'}</button>\r\n                        {textMode && (\r\n                            <div className=\"text-input\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={text}\r\n                                    onChange={(e) => setText(e.target.value)}\r\n                                    placeholder=\"Enter text here...\"\r\n                                />\r\n                                <button onClick={addText}>Add Text</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}