{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Factory = void 0;\n\nconst Util_1 = require(\"./Util\");\n\nconst Validators_1 = require(\"./Validators\");\n\nvar GET = 'get',\n    SET = 'set';\nexports.Factory = {\n  addGetterSetter(constructor, attr, def, validator, after) {\n    exports.Factory.addGetter(constructor, attr, def);\n    exports.Factory.addSetter(constructor, attr, validator, after);\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  addGetter(constructor, attr, def) {\n    var method = GET + Util_1.Util._capitalize(attr);\n\n    constructor.prototype[method] = constructor.prototype[method] || function () {\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n  },\n\n  addSetter(constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n\n    if (!constructor.prototype[method]) {\n      exports.Factory.overWriteSetter(constructor, attr, validator, after);\n    }\n  },\n\n  overWriteSetter(constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n\n    constructor.prototype[method] = function (val) {\n      if (validator && val !== undefined && val !== null) {\n        val = validator.call(this, val, attr);\n      }\n\n      this._setAttr(attr, val);\n\n      if (after) {\n        after.call(this);\n      }\n\n      return this;\n    };\n  },\n\n  addComponentsGetterSetter(constructor, attr, components, validator, after) {\n    var len = components.length,\n        capitalize = Util_1.Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n    constructor.prototype[getter] = function () {\n      var ret = {};\n\n      for (n = 0; n < len; n++) {\n        component = components[n];\n        ret[component] = this.getAttr(attr + capitalize(component));\n      }\n\n      return ret;\n    };\n\n    var basicValidator = (0, Validators_1.getComponentValidator)(components);\n\n    constructor.prototype[setter] = function (val) {\n      var oldVal = this.attrs[attr],\n          key;\n\n      if (validator) {\n        val = validator.call(this, val);\n      }\n\n      if (basicValidator) {\n        basicValidator.call(this, val, attr);\n      }\n\n      for (key in val) {\n        if (!val.hasOwnProperty(key)) {\n          continue;\n        }\n\n        this._setAttr(attr + capitalize(key), val[key]);\n      }\n\n      if (!val) {\n        components.forEach(component => {\n          this._setAttr(attr + capitalize(component), undefined);\n        });\n      }\n\n      this._fireChangeEvent(attr, oldVal, val);\n\n      if (after) {\n        after.call(this);\n      }\n\n      return this;\n    };\n\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  addOverloadedGetterSetter(constructor, attr) {\n    var capitalizedAttr = Util_1.Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n    constructor.prototype[attr] = function () {\n      if (arguments.length) {\n        this[setter](arguments[0]);\n        return this;\n      }\n\n      return this[getter]();\n    };\n  },\n\n  addDeprecatedGetterSetter(constructor, attr, def, validator) {\n    Util_1.Util.error('Adding deprecated ' + attr);\n\n    var method = GET + Util_1.Util._capitalize(attr);\n\n    var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n\n    constructor.prototype[method] = function () {\n      Util_1.Util.error(message);\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n\n    exports.Factory.addSetter(constructor, attr, validator, function () {\n      Util_1.Util.error(message);\n    });\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  backCompat(constructor, methods) {\n    Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n      var method = constructor.prototype[newMethodName];\n\n      var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n\n      var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n\n      function deprecated() {\n        method.apply(this, arguments);\n        Util_1.Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n      }\n\n      constructor.prototype[oldMethodName] = deprecated;\n      constructor.prototype[oldGetter] = deprecated;\n      constructor.prototype[oldSetter] = deprecated;\n    });\n  },\n\n  afterSetFilter() {\n    this._filterUpToDate = false;\n  }\n\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Factory","Util_1","require","Validators_1","GET","SET","addGetterSetter","constructor","attr","def","validator","after","addGetter","addSetter","addOverloadedGetterSetter","method","Util","_capitalize","prototype","val","attrs","undefined","overWriteSetter","call","_setAttr","addComponentsGetterSetter","components","len","length","capitalize","getter","setter","n","component","ret","getAttr","basicValidator","getComponentValidator","oldVal","key","hasOwnProperty","forEach","_fireChangeEvent","capitalizedAttr","arguments","addDeprecatedGetterSetter","error","message","backCompat","methods","each","oldMethodName","newMethodName","oldGetter","oldSetter","deprecated","apply","afterSetFilter","_filterUpToDate"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/Factory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Factory = void 0;\nconst Util_1 = require(\"./Util\");\nconst Validators_1 = require(\"./Validators\");\nvar GET = 'get', SET = 'set';\nexports.Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        exports.Factory.addGetter(constructor, attr, def);\n        exports.Factory.addSetter(constructor, attr, validator, after);\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = (0, Validators_1.getComponentValidator)(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util_1.Util.error('Adding deprecated ' + attr);\n        var method = GET + Util_1.Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util_1.Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        exports.Factory.addSetter(constructor, attr, validator, function () {\n            Util_1.Util.error(message);\n        });\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_1.Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}