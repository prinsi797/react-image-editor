{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\n\nconst Global_1 = require(\"./Global\");\n\nconst Util_1 = require(\"./Util\");\n\nfunction _formatValue(val) {\n  if (Util_1.Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n\n  if (Util_1.Util._isBoolean(val)) {\n    return val;\n  }\n\n  return Object.prototype.toString.call(val);\n}\n\nfunction RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n\n  return Math.round(val);\n}\n\nexports.RGBComponent = RGBComponent;\n\nfunction alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n\n  return val;\n}\n\nexports.alphaComponent = alphaComponent;\n\nfunction getNumberValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isNumber(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberValidator = getNumberValidator;\n\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      let isNumber = Util_1.Util._isNumber(val);\n\n      let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n\n      if (!isNumber && !isValidArray) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\n\nfunction getNumberOrAutoValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util_1.Util._isNumber(val);\n\n      var isAuto = val === 'auto';\n\n      if (!(isNumber || isAuto)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\n\nfunction getStringValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isString(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getStringValidator = getStringValidator;\n\nfunction getStringOrGradientValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const isString = Util_1.Util._isString(val);\n\n      const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' || val && val.addColorStop;\n\n      if (!(isString || isGradient)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\n\nfunction getFunctionValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isFunction(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getFunctionValidator = getFunctionValidator;\n\nfunction getNumberArrayValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n\n      if (TypedArray && val instanceof TypedArray) {\n        return val;\n      }\n\n      if (!Util_1.Util._isArray(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util_1.Util._isNumber(item)) {\n            Util_1.Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getNumberArrayValidator = getNumberArrayValidator;\n\nfunction getBooleanValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isBool = val === true || val === false;\n\n      if (!isBool) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getBooleanValidator = getBooleanValidator;\n\nfunction getComponentValidator(components) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (val === undefined || val === null) {\n        return val;\n      }\n\n      if (!Util_1.Util.isObject(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n\n      return val;\n    };\n  }\n}\n\nexports.getComponentValidator = getComponentValidator;","map":{"version":3,"names":["Object","defineProperty","exports","value","getComponentValidator","getBooleanValidator","getNumberArrayValidator","getFunctionValidator","getStringOrGradientValidator","getStringValidator","getNumberOrAutoValidator","getNumberOrArrayOfNumbersValidator","getNumberValidator","alphaComponent","RGBComponent","Global_1","require","Util_1","_formatValue","val","Util","_isString","prototype","toString","call","_isBoolean","Math","round","Konva","isUnminified","attr","_isNumber","warn","noOfElements","isNumber","isValidArray","_isArray","length","isAuto","isString","isGradient","addColorStop","_isFunction","TypedArray","Int8Array","getPrototypeOf","forEach","item","isBool","components","undefined","isObject"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/Validators.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexports.RGBComponent = RGBComponent;\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexports.alphaComponent = alphaComponent;\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberValidator = getNumberValidator;\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util_1.Util._isNumber(val);\n            let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_1.Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringValidator = getStringValidator;\nfunction getStringOrGradientValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util_1.Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexports.getFunctionValidator = getFunctionValidator;\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberArrayValidator = getNumberArrayValidator;\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexports.getBooleanValidator = getBooleanValidator;\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\nexports.getComponentValidator = getComponentValidator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}