{"ast":null,"code":"var _jsxFileName = \"D:\\\\screenshort-extension\\\\image-editor-react\\\\src\\\\component\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style/main.scss';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { GrRotateLeft, GrRotateRight, GrEdit } from 'react-icons/gr';\nimport { CgMergeVertical, CgMergeHorizontal } from 'react-icons/cg';\nimport { IoMdUndo, IoMdRedo, IoIosSave, IoIosImage } from 'react-icons/io';\nimport { SketchPicker } from 'react-color';\nimport storeData from './LinkedList';\nimport logo from './style/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const filterElement = [{\n    name: 'brightness',\n    maxValue: 200\n  }, {\n    name: 'grayscale',\n    maxValue: 100\n  }, {\n    name: 'sepia',\n    maxValue: 100\n  }, {\n    name: 'saturate',\n    maxValue: 200\n  }, {\n    name: 'contrast',\n    maxValue: 200\n  }, {\n    name: 'hueRotate',\n    maxValue: 360\n  }];\n  const [property, setProperty] = useState({\n    name: 'brightness',\n    maxValue: 200\n  });\n  const [details, setDetails] = useState(null);\n  const [crop, setCrop] = useState({});\n  const [drawing, setDrawing] = useState(false);\n  const [drawingEnabled, setDrawingEnabled] = useState(false);\n  const [text, setText] = useState({\n    value: '',\n    x: 50,\n    y: 50,\n    color: 'red'\n  });\n  const [editingText, setEditingText] = useState(false);\n  const [textColor, setTextColor] = useState('#FF0000'); // Initial color red\n\n  const canvasRef = useRef(null);\n  const [state, setState] = useState({\n    image: '',\n    brightness: 100,\n    grayscale: 0,\n    sepia: 0,\n    saturate: 100,\n    contrast: 100,\n    hueRotate: 0,\n    rotate: 0,\n    vartical: 1,\n    horizental: 1\n  });\n  useEffect(() => {\n    if (details) {\n      drawImage();\n    }\n  }, [state, details, crop, text]);\n\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!details || !canvas) return;\n    const {\n      width,\n      height\n    } = canvas; // Adjust the canvas size to match the image size\n\n    canvas.width = details.naturalWidth;\n    canvas.height = details.naturalHeight;\n    ctx.clearRect(0, 0, width, height);\n    ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\n    ctx.translate(width / 2, height / 2);\n    ctx.rotate(state.rotate * Math.PI / 180);\n    ctx.scale(state.vartical, state.horizental);\n    ctx.drawImage(details, -width / 2, -height / 2, width, height);\n    ctx.resetTransform();\n\n    if (text.value) {\n      ctx.font = '30px Arial';\n      ctx.fillStyle = text.color; // Use the selected text color\n\n      ctx.fillText(text.value, text.x, text.y);\n    }\n  };\n\n  const inputHandle = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const leftRotate = () => {\n    setState(prevState => ({ ...prevState,\n      rotate: prevState.rotate - 90\n    }));\n    storeData.insert({ ...state,\n      rotate: state.rotate - 90\n    });\n  };\n\n  const rightRotate = () => {\n    setState(prevState => ({ ...prevState,\n      rotate: prevState.rotate + 90\n    }));\n    storeData.insert({ ...state,\n      rotate: state.rotate + 90\n    });\n  };\n\n  const varticalFlip = () => {\n    setState(prevState => ({ ...prevState,\n      vartical: prevState.vartical === 1 ? -1 : 1\n    }));\n    storeData.insert({ ...state,\n      vartical: state.vartical === 1 ? -1 : 1\n    });\n  };\n\n  const horizentalFlip = () => {\n    setState(prevState => ({ ...prevState,\n      horizental: prevState.horizental === 1 ? -1 : 1\n    }));\n    storeData.insert({ ...state,\n      horizental: state.horizental === 1 ? -1 : 1\n    });\n  };\n\n  const redo = () => {\n    const data = storeData.redoEdit();\n\n    if (data) {\n      setState(data);\n    }\n  };\n\n  const undo = () => {\n    const data = storeData.undoEdit();\n\n    if (data) {\n      setState(data);\n    }\n  };\n\n  const imageHandle = e => {\n    if (e.target.files.length !== 0) {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const img = new Image();\n        img.src = reader.result;\n\n        img.onload = () => {\n          setDetails(img);\n          setState({ ...state,\n            image: reader.result\n          });\n          storeData.insert({\n            image: reader.result,\n            brightness: 100,\n            grayscale: 0,\n            sepia: 0,\n            saturate: 100,\n            contrast: 100,\n            hueRotate: 0,\n            rotate: 0,\n            vartical: 1,\n            horizental: 1\n          });\n        };\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const imageCrop = () => {\n    if (!details || !crop || !canvasRef.current) return;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = details.naturalWidth / details.width;\n    const scaleY = details.naturalHeight / details.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(details, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const base64Url = canvas.toDataURL('image/jpeg');\n    setState({ ...state,\n      image: base64Url\n    });\n  };\n\n  const saveImage = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!details) return;\n    canvas.width = details.naturalWidth;\n    canvas.height = details.naturalHeight;\n    ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(state.rotate * Math.PI / 180);\n    ctx.scale(state.vartical, state.horizental);\n    ctx.drawImage(details, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n    ctx.resetTransform(); // Draw the text\n\n    if (text.value) {\n      ctx.font = '30px Arial';\n      ctx.fillStyle = text.color; // Use the selected text color\n\n      ctx.fillText(text.value, text.x, text.y);\n    } // Draw the current content of the canvas (including lines)\n\n\n    const currentCanvas = canvasRef.current;\n\n    if (currentCanvas) {\n      ctx.drawImage(currentCanvas, 0, 0);\n    }\n\n    const link = document.createElement('a');\n    link.download = 'image_edit.jpg';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n\n  const startDrawing = e => {\n    if (drawingEnabled) {\n      setDrawing(true);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    }\n  };\n\n  const draw = e => {\n    if (drawing && drawingEnabled) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.stroke();\n    }\n  };\n\n  const stopDrawing = () => {\n    if (drawing) {\n      setDrawing(false);\n    }\n  };\n\n  const handleTextChange = e => {\n    setText({ ...text,\n      value: e.target.value\n    });\n  };\n\n  const handleTextPositionChange = e => {\n    setText({ ...text,\n      x: e.target.valueAsNumber,\n      y: e.target.valueAsNumber\n    });\n  };\n\n  const handleColorChange = color => {\n    setTextColor(color.hex);\n    setText({ ...text,\n      color: color.hex\n    });\n  };\n\n  const toggleTextEditing = () => {\n    setEditingText(!editingText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: imageHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leftRotate,\n        children: /*#__PURE__*/_jsxDEV(GrRotateLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rightRotate,\n        children: /*#__PURE__*/_jsxDEV(GrRotateRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: varticalFlip,\n        children: /*#__PURE__*/_jsxDEV(CgMergeVertical, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: horizentalFlip,\n        children: /*#__PURE__*/_jsxDEV(CgMergeHorizontal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        children: /*#__PURE__*/_jsxDEV(IoMdUndo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redo,\n        children: /*#__PURE__*/_jsxDEV(IoMdRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveImage,\n        children: /*#__PURE__*/_jsxDEV(IoIosSave, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTextEditing,\n        children: /*#__PURE__*/_jsxDEV(GrEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), editingText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text.value,\n          onChange: handleTextChange,\n          placeholder: \"Enter text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: text.x,\n          onChange: e => handleTextPositionChange({ ...e,\n            target: { ...e.target,\n              valueAsNumber: e.target.valueAsNumber,\n              value: e.target.valueAsNumber\n            }\n          }),\n          placeholder: \"X position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: text.y,\n          onChange: e => handleTextPositionChange({ ...e,\n            target: { ...e.target,\n              valueAsNumber: e.target.valueAsNumber,\n              value: e.target.valueAsNumber\n            }\n          }),\n          placeholder: \"Y position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n          color: textColor,\n          onChangeComplete: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: filterElement.map(filter => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: filter.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: filter.name,\n            min: \"0\",\n            max: filter.maxValue,\n            value: state[filter.name],\n            onChange: inputHandle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this)]\n        }, filter.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        width: \"600\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), details && /*#__PURE__*/_jsxDEV(ReactCrop, {\n        src: state.image,\n        crop: crop,\n        onChange: setCrop,\n        onComplete: imageCrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"4ImVqWbvOTs3jDef1wO1XlRkVqg=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactCrop","GrRotateLeft","GrRotateRight","GrEdit","CgMergeVertical","CgMergeHorizontal","IoMdUndo","IoMdRedo","IoIosSave","IoIosImage","SketchPicker","storeData","logo","Main","filterElement","name","maxValue","property","setProperty","details","setDetails","crop","setCrop","drawing","setDrawing","drawingEnabled","setDrawingEnabled","text","setText","value","x","y","color","editingText","setEditingText","textColor","setTextColor","canvasRef","state","setState","image","brightness","grayscale","sepia","saturate","contrast","hueRotate","rotate","vartical","horizental","drawImage","canvas","current","ctx","getContext","width","height","naturalWidth","naturalHeight","clearRect","filter","translate","Math","PI","scale","resetTransform","font","fillStyle","fillText","inputHandle","e","target","leftRotate","prevState","insert","rightRotate","varticalFlip","horizentalFlip","redo","data","redoEdit","undo","undoEdit","imageHandle","files","length","reader","FileReader","onload","img","Image","src","result","readAsDataURL","imageCrop","document","createElement","scaleX","scaleY","base64Url","toDataURL","saveImage","currentCanvas","link","download","href","click","startDrawing","beginPath","moveTo","nativeEvent","offsetX","offsetY","draw","lineTo","stroke","stopDrawing","handleTextChange","handleTextPositionChange","valueAsNumber","handleColorChange","hex","toggleTextEditing","map"],"sources":["D:/screenshort-extension/image-editor-react/src/component/Main.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './style/main.scss';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { GrRotateLeft, GrRotateRight, GrEdit } from 'react-icons/gr';\r\nimport { CgMergeVertical, CgMergeHorizontal } from 'react-icons/cg';\r\nimport { IoMdUndo, IoMdRedo, IoIosSave, IoIosImage } from 'react-icons/io';\r\nimport { SketchPicker } from 'react-color';\r\nimport storeData from './LinkedList';\r\nimport logo from './style/logo.png';\r\n\r\nconst Main = () => {\r\n    const filterElement = [\r\n        { name: 'brightness', maxValue: 200 },\r\n        { name: 'grayscale', maxValue: 100 },\r\n        { name: 'sepia', maxValue: 100 },\r\n        { name: 'saturate', maxValue: 200 },\r\n        { name: 'contrast', maxValue: 200 },\r\n        { name: 'hueRotate', maxValue: 360 }\r\n    ];\r\n\r\n    const [property, setProperty] = useState({ name: 'brightness', maxValue: 200 });\r\n    const [details, setDetails] = useState(null);\r\n    const [crop, setCrop] = useState({});\r\n    const [drawing, setDrawing] = useState(false);\r\n    const [drawingEnabled, setDrawingEnabled] = useState(false);\r\n    const [text, setText] = useState({ value: '', x: 50, y: 50, color: 'red' });\r\n    const [editingText, setEditingText] = useState(false);\r\n    const [textColor, setTextColor] = useState('#FF0000'); // Initial color red\r\n    const canvasRef = useRef(null);\r\n\r\n    const [state, setState] = useState({\r\n        image: '',\r\n        brightness: 100,\r\n        grayscale: 0,\r\n        sepia: 0,\r\n        saturate: 100,\r\n        contrast: 100,\r\n        hueRotate: 0,\r\n        rotate: 0,\r\n        vartical: 1,\r\n        horizental: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (details) {\r\n            drawImage();\r\n        }\r\n    }, [state, details, crop, text]);\r\n\r\n    const drawImage = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!details || !canvas) return;\r\n\r\n        const { width, height } = canvas;\r\n\r\n        // Adjust the canvas size to match the image size\r\n        canvas.width = details.naturalWidth;\r\n        canvas.height = details.naturalHeight;\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\r\n        ctx.translate(width / 2, height / 2);\r\n        ctx.rotate(state.rotate * Math.PI / 180);\r\n        ctx.scale(state.vartical, state.horizental);\r\n        ctx.drawImage(details, -width / 2, -height / 2, width, height);\r\n        ctx.resetTransform();\r\n\r\n        if (text.value) {\r\n            ctx.font = '30px Arial';\r\n            ctx.fillStyle = text.color; // Use the selected text color\r\n            ctx.fillText(text.value, text.x, text.y);\r\n        }\r\n    };\r\n\r\n    const inputHandle = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const leftRotate = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rotate: prevState.rotate - 90\r\n        }));\r\n        storeData.insert({ ...state, rotate: state.rotate - 90 });\r\n    };\r\n\r\n    const rightRotate = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rotate: prevState.rotate + 90\r\n        }));\r\n        storeData.insert({ ...state, rotate: state.rotate + 90 });\r\n    };\r\n\r\n    const varticalFlip = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            vartical: prevState.vartical === 1 ? -1 : 1\r\n        }));\r\n        storeData.insert({ ...state, vartical: state.vartical === 1 ? -1 : 1 });\r\n    };\r\n\r\n    const horizentalFlip = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            horizental: prevState.horizental === 1 ? -1 : 1\r\n        }));\r\n        storeData.insert({ ...state, horizental: state.horizental === 1 ? -1 : 1 });\r\n    };\r\n\r\n    const redo = () => {\r\n        const data = storeData.redoEdit();\r\n        if (data) {\r\n            setState(data);\r\n        }\r\n    };\r\n\r\n    const undo = () => {\r\n        const data = storeData.undoEdit();\r\n        if (data) {\r\n            setState(data);\r\n        }\r\n    };\r\n\r\n    const imageHandle = (e) => {\r\n        if (e.target.files.length !== 0) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const img = new Image();\r\n                img.src = reader.result;\r\n                img.onload = () => {\r\n                    setDetails(img);\r\n                    setState({\r\n                        ...state,\r\n                        image: reader.result\r\n                    });\r\n                    storeData.insert({\r\n                        image: reader.result,\r\n                        brightness: 100,\r\n                        grayscale: 0,\r\n                        sepia: 0,\r\n                        saturate: 100,\r\n                        contrast: 100,\r\n                        hueRotate: 0,\r\n                        rotate: 0,\r\n                        vartical: 1,\r\n                        horizental: 1\r\n                    });\r\n                };\r\n            };\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const imageCrop = () => {\r\n        if (!details || !crop || !canvasRef.current) return;\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        const scaleX = details.naturalWidth / details.width;\r\n        const scaleY = details.naturalHeight / details.height;\r\n\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n\r\n        ctx.drawImage(\r\n            details,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        const base64Url = canvas.toDataURL('image/jpeg');\r\n        setState({\r\n            ...state,\r\n            image: base64Url\r\n        });\r\n    };\r\n\r\n    const saveImage = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        if (!details) return;\r\n\r\n        canvas.width = details.naturalWidth;\r\n        canvas.height = details.naturalHeight;\r\n\r\n        ctx.filter = `brightness(${state.brightness}%) sepia(${state.sepia}%) saturate(${state.saturate}%) contrast(${state.contrast}%) grayscale(${state.grayscale}%) hue-rotate(${state.hueRotate}deg)`;\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(state.rotate * Math.PI / 180);\r\n        ctx.scale(state.vartical, state.horizental);\r\n        ctx.drawImage(\r\n            details,\r\n            -canvas.width / 2,\r\n            -canvas.height / 2,\r\n            canvas.width,\r\n            canvas.height\r\n        );\r\n        ctx.resetTransform();\r\n\r\n        // Draw the text\r\n        if (text.value) {\r\n            ctx.font = '30px Arial';\r\n            ctx.fillStyle = text.color; // Use the selected text color\r\n            ctx.fillText(text.value, text.x, text.y);\r\n        }\r\n\r\n        // Draw the current content of the canvas (including lines)\r\n        const currentCanvas = canvasRef.current;\r\n        if (currentCanvas) {\r\n            ctx.drawImage(currentCanvas, 0, 0);\r\n        }\r\n\r\n        const link = document.createElement('a');\r\n        link.download = 'image_edit.jpg';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n    };\r\n\r\n    const startDrawing = (e) => {\r\n        if (drawingEnabled) {\r\n            setDrawing(true);\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n        }\r\n    };\r\n\r\n    const draw = (e) => {\r\n        if (drawing && drawingEnabled) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n            ctx.stroke();\r\n        }\r\n    };\r\n\r\n    const stopDrawing = () => {\r\n        if (drawing) {\r\n            setDrawing(false);\r\n        }\r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        setText({\r\n            ...text,\r\n            value: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleTextPositionChange = (e) => {\r\n        setText({\r\n            ...text,\r\n            x: e.target.valueAsNumber,\r\n            y: e.target.valueAsNumber\r\n        });\r\n    };\r\n\r\n    const handleColorChange = (color) => {\r\n        setTextColor(color.hex);\r\n        setText({\r\n            ...text,\r\n            color: color.hex\r\n        });\r\n    };\r\n\r\n    const toggleTextEditing = () => {\r\n        setEditingText(!editingText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <header>\r\n                <img src={logo} alt=\"Logo\" className=\"logo\" />\r\n                <h1>Image Editor</h1>\r\n            </header>\r\n            <aside className=\"sidebar\">\r\n                <input type=\"file\" accept=\"image/*\" onChange={imageHandle} />\r\n                <button onClick={leftRotate}><GrRotateLeft /></button>\r\n                <button onClick={rightRotate}><GrRotateRight /></button>\r\n                <button onClick={varticalFlip}><CgMergeVertical /></button>\r\n                <button onClick={horizentalFlip}><CgMergeHorizontal /></button>\r\n                <button onClick={undo}><IoMdUndo /></button>\r\n                <button onClick={redo}><IoMdRedo /></button>\r\n                <button onClick={saveImage}><IoIosSave /></button>\r\n                <button onClick={toggleTextEditing}><GrEdit /></button>\r\n                {editingText && (\r\n                    <div className=\"text-editor\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={text.value}\r\n                            onChange={handleTextChange}\r\n                            placeholder=\"Enter text\"\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            value={text.x}\r\n                            onChange={(e) => handleTextPositionChange({ ...e, target: { ...e.target, valueAsNumber: e.target.valueAsNumber, value: e.target.valueAsNumber } })}\r\n                            placeholder=\"X position\"\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            value={text.y}\r\n                            onChange={(e) => handleTextPositionChange({ ...e, target: { ...e.target, valueAsNumber: e.target.valueAsNumber, value: e.target.valueAsNumber } })}\r\n                            placeholder=\"Y position\"\r\n                        />\r\n                        <SketchPicker color={textColor} onChangeComplete={handleColorChange} />\r\n                    </div>\r\n                )}\r\n                <div className=\"filters\">\r\n                    {filterElement.map((filter) => (\r\n                        <div key={filter.name}>\r\n                            <label>{filter.name}</label>\r\n                            <input\r\n                                type=\"range\"\r\n                                name={filter.name}\r\n                                min=\"0\"\r\n                                max={filter.maxValue}\r\n                                value={state[filter.name]}\r\n                                onChange={inputHandle}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </aside>\r\n            <main className=\"image-container\">\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    onMouseDown={startDrawing}\r\n                    onMouseMove={draw}\r\n                    onMouseUp={stopDrawing}\r\n                    width=\"600\"\r\n                    height=\"400\"\r\n                />\r\n                {details && <ReactCrop src={state.image} crop={crop} onChange={setCrop} onComplete={imageCrop} />}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}