{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Layer = void 0;\n\nconst Util_1 = require(\"./Util\");\n\nconst Container_1 = require(\"./Container\");\n\nconst Node_1 = require(\"./Node\");\n\nconst Factory_1 = require(\"./Factory\");\n\nconst Canvas_1 = require(\"./Canvas\");\n\nconst Validators_1 = require(\"./Validators\");\n\nconst Shape_1 = require(\"./Shape\");\n\nconst Global_1 = require(\"./Global\");\n\nvar HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    INTERSECTION_OFFSETS = [{\n  x: 0,\n  y: 0\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\nclass Layer extends Container_1.Container {\n  constructor(config) {\n    super(config);\n    this.canvas = new Canvas_1.SceneCanvas();\n    this.hitCanvas = new Canvas_1.HitCanvas({\n      pixelRatio: 1\n    });\n    this._waitingForDraw = false;\n    this.on('visibleChange.konva', this._checkVisibility);\n\n    this._checkVisibility();\n\n    this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n\n    this._setSmoothEnabled();\n  }\n\n  createPNGStream() {\n    const c = this.canvas._canvas;\n    return c.createPNGStream();\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  getNativeCanvasElement() {\n    return this.canvas._canvas;\n  }\n\n  getHitCanvas() {\n    return this.hitCanvas;\n  }\n\n  getContext() {\n    return this.getCanvas().getContext();\n  }\n\n  clear(bounds) {\n    this.getContext().clear(bounds);\n    this.getHitCanvas().getContext().clear(bounds);\n    return this;\n  }\n\n  setZIndex(index) {\n    super.setZIndex(index);\n    var stage = this.getStage();\n\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n\n      if (index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n    }\n\n    return this;\n  }\n\n  moveToTop() {\n    Node_1.Node.prototype.moveToTop.call(this);\n    var stage = this.getStage();\n\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n\n    return true;\n  }\n\n  moveUp() {\n    var moved = Node_1.Node.prototype.moveUp.call(this);\n\n    if (!moved) {\n      return false;\n    }\n\n    var stage = this.getStage();\n\n    if (!stage || !stage.content) {\n      return false;\n    }\n\n    stage.content.removeChild(this.getNativeCanvasElement());\n\n    if (this.index < stage.children.length - 1) {\n      stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n    } else {\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n\n    return true;\n  }\n\n  moveDown() {\n    if (Node_1.Node.prototype.moveDown.call(this)) {\n      var stage = this.getStage();\n\n      if (stage) {\n        var children = stage.children;\n\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveToBottom() {\n    if (Node_1.Node.prototype.moveToBottom.call(this)) {\n      var stage = this.getStage();\n\n      if (stage) {\n        var children = stage.children;\n\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  getLayer() {\n    return this;\n  }\n\n  remove() {\n    var _canvas = this.getNativeCanvasElement();\n\n    Node_1.Node.prototype.remove.call(this);\n\n    if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n      _canvas.parentNode.removeChild(_canvas);\n    }\n\n    return this;\n  }\n\n  getStage() {\n    return this.parent;\n  }\n\n  setSize(_ref) {\n    let {\n      width,\n      height\n    } = _ref;\n    this.canvas.setSize(width, height);\n    this.hitCanvas.setSize(width, height);\n\n    this._setSmoothEnabled();\n\n    return this;\n  }\n\n  _validateAdd(child) {\n    var type = child.getType();\n\n    if (type !== 'Group' && type !== 'Shape') {\n      Util_1.Util.throw('You may only add groups and shapes to a layer.');\n    }\n  }\n\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.width = config.width || this.getWidth();\n    config.height = config.height || this.getHeight();\n    config.x = config.x !== undefined ? config.x : this.x();\n    config.y = config.y !== undefined ? config.y : this.y();\n    return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n  }\n\n  _checkVisibility() {\n    const visible = this.visible();\n\n    if (visible) {\n      this.canvas._canvas.style.display = 'block';\n    } else {\n      this.canvas._canvas.style.display = 'none';\n    }\n  }\n\n  _setSmoothEnabled() {\n    this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n  }\n\n  getWidth() {\n    if (this.parent) {\n      return this.parent.width();\n    }\n  }\n\n  setWidth() {\n    Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n  }\n\n  getHeight() {\n    if (this.parent) {\n      return this.parent.height();\n    }\n  }\n\n  setHeight() {\n    Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n  }\n\n  batchDraw() {\n    if (!this._waitingForDraw) {\n      this._waitingForDraw = true;\n      Util_1.Util.requestAnimFrame(() => {\n        this.draw();\n        this._waitingForDraw = false;\n      });\n    }\n\n    return this;\n  }\n\n  getIntersection(pos) {\n    if (!this.isListening() || !this.isVisible()) {\n      return null;\n    }\n\n    var spiralSearchDistance = 1;\n    var continueSearch = false;\n\n    while (true) {\n      for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n        const intersectionOffset = INTERSECTION_OFFSETS[i];\n\n        const obj = this._getIntersection({\n          x: pos.x + intersectionOffset.x * spiralSearchDistance,\n          y: pos.y + intersectionOffset.y * spiralSearchDistance\n        });\n\n        const shape = obj.shape;\n\n        if (shape) {\n          return shape;\n        }\n\n        continueSearch = !!obj.antialiased;\n\n        if (!obj.antialiased) {\n          break;\n        }\n      }\n\n      if (continueSearch) {\n        spiralSearchDistance += 1;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  _getIntersection(pos) {\n    const ratio = this.hitCanvas.pixelRatio;\n    const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n    const p3 = p[3];\n\n    if (p3 === 255) {\n      const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n\n      const shape = Shape_1.shapes[HASH + colorKey];\n\n      if (shape) {\n        return {\n          shape: shape\n        };\n      }\n\n      return {\n        antialiased: true\n      };\n    } else if (p3 > 0) {\n      return {\n        antialiased: true\n      };\n    }\n\n    return {};\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas();\n\n    this._fire(BEFORE_DRAW, {\n      node: this\n    });\n\n    if (this.clearBeforeDraw()) {\n      canvas.getContext().clear();\n    }\n\n    Container_1.Container.prototype.drawScene.call(this, canvas, top);\n\n    this._fire(DRAW, {\n      node: this\n    });\n\n    return this;\n  }\n\n  drawHit(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas;\n\n    if (layer && layer.clearBeforeDraw()) {\n      layer.getHitCanvas().getContext().clear();\n    }\n\n    Container_1.Container.prototype.drawHit.call(this, canvas, top);\n    return this;\n  }\n\n  enableHitGraph() {\n    this.hitGraphEnabled(true);\n    return this;\n  }\n\n  disableHitGraph() {\n    this.hitGraphEnabled(false);\n    return this;\n  }\n\n  setHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    this.listening(val);\n  }\n\n  getHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    return this.listening();\n  }\n\n  toggleHitCanvas() {\n    if (!this.parent || !this.parent['content']) {\n      return;\n    }\n\n    var parent = this.parent;\n    var added = !!this.hitCanvas._canvas.parentNode;\n\n    if (added) {\n      parent.content.removeChild(this.hitCanvas._canvas);\n    } else {\n      parent.content.appendChild(this.hitCanvas._canvas);\n    }\n  }\n\n  destroy() {\n    Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n    return super.destroy();\n  }\n\n}\n\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());","map":{"version":3,"names":["Object","defineProperty","exports","value","Layer","Util_1","require","Container_1","Node_1","Factory_1","Canvas_1","Validators_1","Shape_1","Global_1","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Container","constructor","config","canvas","SceneCanvas","hitCanvas","HitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","createPNGStream","c","_canvas","getCanvas","getNativeCanvasElement","getHitCanvas","getContext","clear","bounds","setZIndex","index","stage","getStage","content","removeChild","children","insertBefore","appendChild","moveToTop","Node","prototype","call","moveUp","moved","moveDown","moveToBottom","getLayer","remove","parentNode","Util","_isInDocument","parent","setSize","width","height","_validateAdd","child","type","getType","throw","_toKonvaCanvas","getWidth","getHeight","undefined","visible","style","display","_context","imageSmoothingEnabled","setWidth","warn","setHeight","batchDraw","requestAnimFrame","draw","getIntersection","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","shapes","drawScene","can","top","layer","_fire","node","clearBeforeDraw","drawHit","enableHitGraph","hitGraphEnabled","disableHitGraph","setHitGraphEnabled","val","listening","getHitGraphEnabled","toggleHitCanvas","added","destroy","releaseCanvas","nodeType","_registerNode","Factory","addGetterSetter","getBooleanValidator"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/Layer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Layer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Node_1 = require(\"./Node\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Validators_1 = require(\"./Validators\");\nconst Shape_1 = require(\"./Shape\");\nconst Global_1 = require(\"./Global\");\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new Canvas_1.SceneCanvas();\n        this.hitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node_1.Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node_1.Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node_1.Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node_1.Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util_1.Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = Shape_1.shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}