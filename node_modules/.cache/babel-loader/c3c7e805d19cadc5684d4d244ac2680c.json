{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animation = void 0;\n\nconst Global_1 = require(\"./Global\");\n\nconst Util_1 = require(\"./Util\");\n\nconst now = function () {\n  if (Global_1.glob.performance && Global_1.glob.performance.now) {\n    return function () {\n      return Global_1.glob.performance.now();\n    };\n  }\n\n  return function () {\n    return new Date().getTime();\n  };\n}();\n\nclass Animation {\n  constructor(func, layers) {\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n\n  setLayers(layers) {\n    let lays = [];\n\n    if (layers) {\n      lays = Array.isArray(layers) ? layers : [layers];\n    }\n\n    this.layers = lays;\n    return this;\n  }\n\n  getLayers() {\n    return this.layers;\n  }\n\n  addLayer(layer) {\n    const layers = this.layers;\n    const len = layers.length;\n\n    for (let n = 0; n < len; n++) {\n      if (layers[n]._id === layer._id) {\n        return false;\n      }\n    }\n\n    this.layers.push(layer);\n    return true;\n  }\n\n  isRunning() {\n    const a = Animation;\n    const animations = a.animations;\n    const len = animations.length;\n\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === this.id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  start() {\n    this.stop();\n    this.frame.timeDiff = 0;\n    this.frame.lastTime = now();\n\n    Animation._addAnimation(this);\n\n    return this;\n  }\n\n  stop() {\n    Animation._removeAnimation(this);\n\n    return this;\n  }\n\n  _updateFrameObject(time) {\n    this.frame.timeDiff = time - this.frame.lastTime;\n    this.frame.lastTime = time;\n    this.frame.time += this.frame.timeDiff;\n    this.frame.frameRate = 1000 / this.frame.timeDiff;\n  }\n\n  static _addAnimation(anim) {\n    this.animations.push(anim);\n\n    this._handleAnimation();\n  }\n\n  static _removeAnimation(anim) {\n    const id = anim.id;\n    const animations = this.animations;\n    const len = animations.length;\n\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  }\n\n  static _runFrames() {\n    const layerHash = {};\n    const animations = this.animations;\n\n    for (let n = 0; n < animations.length; n++) {\n      const anim = animations[n];\n      const layers = anim.layers;\n      const func = anim.func;\n\n      anim._updateFrameObject(now());\n\n      const layersLen = layers.length;\n      let needRedraw;\n\n      if (func) {\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n\n      if (!needRedraw) {\n        continue;\n      }\n\n      for (let i = 0; i < layersLen; i++) {\n        const layer = layers[i];\n\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n\n    for (let key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n\n      layerHash[key].batchDraw();\n    }\n  }\n\n  static _animationLoop() {\n    const Anim = Animation;\n\n    if (Anim.animations.length) {\n      Anim._runFrames();\n\n      Util_1.Util.requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  }\n\n  static _handleAnimation() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      Util_1.Util.requestAnimFrame(this._animationLoop);\n    }\n  }\n\n}\n\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;","map":{"version":3,"names":["Object","defineProperty","exports","value","Animation","Global_1","require","Util_1","now","glob","performance","Date","getTime","constructor","func","layers","id","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","Array","isArray","getLayers","addLayer","layer","len","length","n","_id","push","isRunning","a","animations","start","stop","_addAnimation","_removeAnimation","_updateFrameObject","anim","_handleAnimation","splice","_runFrames","layerHash","layersLen","needRedraw","call","i","undefined","key","hasOwnProperty","batchDraw","_animationLoop","Anim","Util","requestAnimFrame","animRunning"],"sources":["D:/screenshort-extension/image-editor-react/node_modules/konva/lib/Animation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst now = (function () {\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\n        return function () {\n            return Global_1.glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        let lays = [];\n        if (layers) {\n            lays = Array.isArray(layers) ? layers : [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        const layers = this.layers;\n        const len = layers.length;\n        for (let n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        const a = Animation;\n        const animations = a.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        const id = anim.id;\n        const animations = this.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        const layerHash = {};\n        const animations = this.animations;\n        for (let n = 0; n < animations.length; n++) {\n            const anim = animations[n];\n            const layers = anim.layers;\n            const func = anim.func;\n            anim._updateFrameObject(now());\n            const layersLen = layers.length;\n            let needRedraw;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (let i = 0; i < layersLen; i++) {\n                const layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (let key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        const Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_1.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}